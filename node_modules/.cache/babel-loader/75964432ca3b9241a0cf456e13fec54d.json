{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\React\\\\tree-mysql\\\\src\\\\pages\\\\people\\\\Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Input1 from '../../Components/Inputs/input1';\nimport Btn1 from '../../Components/buttons/Btn1';\nimport { tokenPost, tokenGet } from '../../utils/functions';\n\nfunction Form(props) {\n  _s();\n\n  const {\n    p,\n    ex\n  } = props;\n\n  const getCls = base => {\n    return p.getCls('goM-' + base);\n  };\n\n  const [name, setName] = useState('');\n  const [searchV, setSearchV] = useState('');\n\n  const handleSave = () => {\n    tokenPost(p.apiBase2 + '/people', {\n      fname: name\n    }, p.token).then(d => {\n      tokenGet(p.apiBase2 + '/people', {\n        Authorization: p.token\n      }).then(d => {\n        ex.setRGroups(d);\n      });\n    });\n  };\n\n  const handleSChange = e => {\n    const v = e.target.value;\n    setSearchV(v);\n\n    if (v.trim().length <= 0) {\n      ex.setFilteredPeople(ex.rGroups);\n      return;\n    }\n\n    const result = ex.filteredPeople.filter(d => {\n      return d.fname.search(v) >= 0;\n    });\n    ex.setFilteredPeople(result);\n  };\n\n  const handleChange = e => {\n    setName(e.target.value); // check empty string : \n\n    if (e.target.value.trim().length === 0) {\n      tokenGet(p.apiBase + '/person', {\n        token: p.token\n      }).then(d => {\n        ex.setRGroups(d);\n      });\n      return;\n    } // get groups array rGroups, setRGroups\n\n\n    const re = new RegExp(e.target.value, \"ig\");\n    const ar1 = ex.rGroups.filter(d => {\n      if (!d.fname.match(re)) return false;\n      return d.fname.match(re).length > 0;\n    });\n    ex.setRGroups(ar1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: getCls('wrapper0'),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: getCls('w1'),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: getCls('wrapper'),\n        children: /*#__PURE__*/_jsxDEV(Input1, {\n          type: \"text\",\n          value: searchV,\n          classes: \"XildWaIau\",\n          onChange: e => {\n            handleSChange(e);\n          },\n          placeholder: \"search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: getCls('w1'),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: getCls('wrapper'),\n        children: [/*#__PURE__*/_jsxDEV(Input1, {\n          type: \"text\",\n          value: name,\n          classes: \"XildWIau\",\n          onChange: e => {\n            handleChange(e);\n          },\n          placeholder: \"person name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Btn1, {\n          text: \"\\u062D\\u0641\\u0638\",\n          p: p,\n          onclick: handleSave\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Form, \"EYn6ou+GpxRPN+5kw42175e1KgE=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["F:/React/tree-mysql/src/pages/people/Form.js"],"names":["React","useState","Input1","Btn1","tokenPost","tokenGet","Form","props","p","ex","getCls","base","name","setName","searchV","setSearchV","handleSave","apiBase2","fname","token","then","d","Authorization","setRGroups","handleSChange","e","v","target","value","trim","length","setFilteredPeople","rGroups","result","filteredPeople","filter","search","handleChange","apiBase","re","RegExp","ar1","match"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport Input1 from '../../Components/Inputs/input1'\nimport Btn1 from '../../Components/buttons/Btn1'\nimport { tokenPost, tokenGet } from '../../utils/functions'\n\nfunction Form(props) {\n    const { p, ex } = props\n    const getCls = (base) => { return p.getCls('goM-' + base) }\n\n    const [name, setName] = useState('')\n    const [searchV, setSearchV] = useState('')\n\n    const handleSave = () => {\n        tokenPost(p.apiBase2 + '/people', { fname: name }, p.token)\n            .then((d) => {\n                tokenGet(p.apiBase2 + '/people', { Authorization: p.token })\n                    .then((d) => {\n                        ex.setRGroups(d)\n                    })\n            })\n    }\n\n    const handleSChange = (e) => {\n        const v = e.target.value\n        setSearchV(v)\n        if (v.trim().length <= 0) {\n            ex.setFilteredPeople(ex.rGroups)\n            return\n        }\n        const result = ex.filteredPeople.filter((d) => {\n            return d.fname.search(v) >= 0\n        })\n        ex.setFilteredPeople(result)\n    }\n\n    const handleChange = (e) => {\n        setName(e.target.value)\n        // check empty string : \n        if (e.target.value.trim().length === 0) {\n            tokenGet(p.apiBase + '/person', { token: p.token })\n                .then((d) => {\n                    ex.setRGroups(d)\n                })\n            return\n        }\n\n        // get groups array rGroups, setRGroups\n        const re = new RegExp(e.target.value, \"ig\")\n        const ar1 = ex.rGroups.filter((d) => {\n            if (!d.fname.match(re)) return false\n            return d.fname.match(re).length > 0\n        })\n        ex.setRGroups(ar1)\n    }\n\n    return (\n        <div className={getCls('wrapper0')}>\n\n            <div className={getCls('w1')}>\n                {/* form section */}\n                <div className={getCls('wrapper')}>\n                    {/* input */}\n                    <Input1 type=\"text\" value={searchV} classes='XildWaIau' onChange={(e) => { handleSChange(e) }} placeholder='search' />\n                </div>\n            </div>\n\n\n            <div className={getCls('w1')}>\n                {/* form section */}\n                <div className={getCls('wrapper')}>\n                    {/* input */}\n                    <Input1 type=\"text\" value={name} classes='XildWIau' onChange={(e) => { handleChange(e) }} placeholder='person name' />\n                    {/* save */}\n                    <Btn1 text='حفظ' p={p} onclick={handleSave} />\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default Form\n\n"]},"metadata":{},"sourceType":"module"}