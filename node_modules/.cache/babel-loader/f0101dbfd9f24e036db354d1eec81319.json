{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\React\\\\tree-mysql\\\\src\\\\Components\\\\branches\\\\BranchView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport List from './list/List';\nimport { Link } from 'react-router-dom';\nimport RightPanel from '../rightSide/RightPanel';\nimport FlashCard from './FlashCard';\nimport Quizlet from './Quizlet';\nimport { tokenPatch, AsyncForEach, tokenGet, date1, axiosTokenHeader } from '../../utils/functions';\nimport axios from 'axios';\n\nfunction BranchView(props) {\n  _s();\n\n  const {\n    isDark,\n    data,\n    apiBase,\n    setUpToDate,\n    fontSize,\n    p\n  } = props;\n  let {\n    ex\n  } = props;\n  const {\n    getCls\n  } = p;\n  const {\n    freshBranches\n  } = ex;\n  const [sBranches, setSBranches] = useState([]);\n  const [moveTarget, setMoveTarget] = useState('');\n  const [resMsg, setResMsg] = useState(null);\n  const [isFlashCard, setIsFlashCard] = useState(false);\n  const [isQuizlet, setIsQuizlet] = useState(false);\n  const [isAction, setIsAction] = useState(false);\n  const [parents, setParent] = useState([]);\n  const [origin, setOrigin] = useState(false);\n  let branchTitle = [];\n  if (data && data.name) branchTitle = data.name.split('\\n');\n\n  const createDate = () => {\n    if (!data || !data.createdAt) return '';\n    const date = new Date(data.createdAt);\n    const typed = date1(date);\n    return typed;\n  };\n\n  const flashCardReq = () => {\n    setIsAction(true);\n    setIsFlashCard(true);\n    setIsQuizlet(false);\n  };\n\n  const quizletReq = () => {\n    setIsAction(true);\n    setIsQuizlet(true);\n    setIsFlashCard(false);\n  };\n\n  useEffect(() => {\n    console.log(data);\n    const url = p.apiBase2 + '/branches/origin?id=' + data[0].id;\n    axios.get(url, axiosTokenHeader(p.token)).then(e => {\n      setOrigin(e);\n    }).catch(r => {\n      console.log(r);\n    });\n  }, []);\n\n  const bOrigin = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: getCls('BNBKece'),\n      children: [origin && /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\" + origin.id,\n        className: `link ${isDark ? \"dark-link\" : \"light-link\"}`,\n        children: origin.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this), !origin && /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        className: `link ${isDark ? \"dark-link\" : \"light-link\"}`,\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 94\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this);\n  };\n\n  const listActions = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: getCls('container'),\n      children: p.navSts.isVisibleNav && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: getCls('branch-list-header-actions'),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: getCls('list-action'),\n          onClick: () => {\n            flashCardReq();\n          },\n          children: \"flash card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: getCls('list-action'),\n          onClick: () => {\n            quizletReq();\n          },\n          children: \"Quizlet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this);\n  };\n\n  const getCommand = () => {\n    if (data.command) return '#' + data.command;\n    return '';\n  };\n\n  const getList = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: getCls('gDhZZyqJTsAcIbvq'),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: getCls('time'),\n        children: createDate()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: getCls('parentW1'),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: getCls('U7q'),\n          children: parents.length > 0 && parents.map(parent => /*#__PURE__*/_jsxDEV(Link, {\n            to: '/' + parent._id,\n            className: getCls('link') + ' VH9sY',\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"mDCcQ\",\n              children: \"/\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"JpN\",\n              children: parent.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 33\n            }, this)]\n          }, parent._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: getCls('branch-list-header'),\n        style: {\n          textAlign: `${p.listAlign}`\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\" \", branchTitle.map(e => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: getCls('branch-list-title'),\n            children: e\n          }, getRandId(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this)), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: getCls('YmOebB8'),\n          children: getCommand()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), data.children && /*#__PURE__*/_jsxDEV(List, {\n        branches: data.children,\n        isDark: isDark,\n        location: data._id,\n        apiBase: apiBase,\n        setUpToDate: setUpToDate,\n        fontSize: fontSize,\n        p: p,\n        ex: ex\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }, this), !data.children && /*#__PURE__*/_jsxDEV(List, {\n        branches: data,\n        isDark: isDark,\n        location: data._id,\n        apiBase: apiBase,\n        setUpToDate: setUpToDate,\n        fontSize: fontSize,\n        p: p,\n        ex: ex\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this);\n  };\n\n  const handleMove = () => {\n    AsyncForEach(sBranches, () => {\n      sBranches.forEach(branch => {\n        const url = apiBase + '/branch';\n        const data = {\n          id: branch._id,\n          origin: moveTarget\n        };\n        tokenPatch(url, data, p.token).then(d => {\n          if (d && d._d) console.log(d._id);\n        });\n      });\n    });\n    freshBranches();\n    setSBranches([]);\n  };\n\n  useEffect(() => {\n    if (!data._id) return;\n    tokenGet(p.apiBase + '/branch/pBranch?id=' + data._id).then(d => {\n      if (d.reason) return;\n      setParent(d.reverse());\n    });\n  }, [data]);\n  ex = { ...ex,\n    data,\n    setIsAction,\n    sBranches,\n    setSBranches,\n    freshBranches,\n    branchTitle\n  };\n\n  const getListWrapperWidth = () => {\n    if (p.navSts.isVisibleNav) {\n      return 43;\n    } else {\n      return 90;\n    }\n  };\n\n  const getMoveSection = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: getCls('wrapper'),\n      children: p.navSts.isVisibleNav && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: getCls('move'),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: getCls('input'),\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: getCls('VaqSI'),\n            value: moveTarget,\n            onChange: e => {\n              setMoveTarget(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: getCls('move1'),\n          onClick: handleMove,\n          children: \"Move\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: data && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: p.getCls('branch-view-wrapper'),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: getCls('Rta6QukC'),\n        children: [/*#__PURE__*/_jsxDEV(RightPanel, {\n          p: p\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 25\n        }, this), getMoveSection()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 21\n      }, this), !isAction &&\n      /*#__PURE__*/\n\n      /* origin name and list actions */\n      _jsxDEV(\"div\", {\n        className: p.getCls('branch-view-container'),\n        style: {\n          width: getListWrapperWidth() + 'vw'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: getCls('root-section'),\n          children: [bOrigin(), listActions()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 29\n        }, this), getList()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 25\n      }, this), isAction && isFlashCard && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: getCls('flash-card-wrapper'),\n        children: /*#__PURE__*/_jsxDEV(FlashCard, {\n          p: p,\n          ex: ex\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 25\n      }, this), isAction && isQuizlet && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: getCls('flash-card-wrapper'),\n        children: /*#__PURE__*/_jsxDEV(Quizlet, {\n          p: p,\n          ex: ex\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 9\n  }, this);\n}\n\n_s(BranchView, \"YafSOOd8TjtpHQWygYVLMkYDRoY=\");\n\n_c = BranchView;\n\nfunction getRandId() {\n  return Math.random() * (200000 - 0) + 0;\n}\n\nexport default BranchView;\n\nvar _c;\n\n$RefreshReg$(_c, \"BranchView\");","map":{"version":3,"sources":["F:/React/tree-mysql/src/Components/branches/BranchView.js"],"names":["React","useEffect","useState","List","Link","RightPanel","FlashCard","Quizlet","tokenPatch","AsyncForEach","tokenGet","date1","axiosTokenHeader","axios","BranchView","props","isDark","data","apiBase","setUpToDate","fontSize","p","ex","getCls","freshBranches","sBranches","setSBranches","moveTarget","setMoveTarget","resMsg","setResMsg","isFlashCard","setIsFlashCard","isQuizlet","setIsQuizlet","isAction","setIsAction","parents","setParent","origin","setOrigin","branchTitle","name","split","createDate","createdAt","date","Date","typed","flashCardReq","quizletReq","console","log","url","apiBase2","id","get","token","then","e","catch","r","bOrigin","listActions","navSts","isVisibleNav","getCommand","command","getList","length","map","parent","_id","textAlign","listAlign","getRandId","children","handleMove","forEach","branch","d","_d","reason","reverse","getListWrapperWidth","getMoveSection","target","value","width","Math","random"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport List from './list/List'\nimport { Link } from 'react-router-dom'\nimport RightPanel from '../rightSide/RightPanel'\nimport FlashCard from './FlashCard'\nimport Quizlet from './Quizlet'\nimport { tokenPatch, AsyncForEach, tokenGet, date1, axiosTokenHeader } from '../../utils/functions'\nimport axios from 'axios'\n\nfunction BranchView(props) {\n    const { isDark, data, apiBase, setUpToDate, fontSize, p } = props\n    let { ex } = props\n    const { getCls } = p\n    const { freshBranches } = ex\n    const [sBranches, setSBranches] = useState([])\n    const [moveTarget, setMoveTarget] = useState('')\n    const [resMsg, setResMsg] = useState(null)\n    const [isFlashCard, setIsFlashCard] = useState(false)\n    const [isQuizlet, setIsQuizlet] = useState(false)\n    const [isAction, setIsAction] = useState(false)\n    const [parents, setParent] = useState([])\n    const [origin, setOrigin] = useState(false)\n    let branchTitle = []\n    if (data && data.name)\n        branchTitle = data.name.split('\\n')\n\n\n    const createDate = () => {\n        if (!data || !data.createdAt) return ''\n        const date = new Date(data.createdAt)\n        const typed = date1(date)\n        return typed\n\n    }\n\n    const flashCardReq = () => {\n        setIsAction(true)\n        setIsFlashCard(true)\n        setIsQuizlet(false)\n\n    }\n\n    const quizletReq = () => {\n        setIsAction(true)\n        setIsQuizlet(true)\n        setIsFlashCard(false)\n    }\n\n    useEffect(() => {\n        console.log(data)\n        const url = p.apiBase2 + '/branches/origin?id=' + data[0].id\n        axios.get(url, axiosTokenHeader(p.token)).then(e => {\n            setOrigin(e)\n        }).catch(r => {\n            console.log(r)\n        })\n    }, [])\n\n    const bOrigin = () => {\n        return (\n            <div className={getCls('BNBKece')}>\n                {origin &&\n                    <Link to={\"/\" + origin.id} className={`link ${isDark ? \"dark-link\" : \"light-link\"}`}>{origin.name}</Link>\n                }\n\n                {!origin &&\n                    <Link to={\"/\"} className={`link ${isDark ? \"dark-link\" : \"light-link\"}`}><i className=\"fas fa-home\"></i></Link>\n\n                }\n            </div>\n        )\n    }\n\n    const listActions = () => {\n        return (\n            <div className={getCls('container')}>\n                {p.navSts.isVisibleNav &&\n                    <div className={getCls('branch-list-header-actions')}>\n                        <div className={getCls('list-action')} onClick={() => { flashCardReq() }}>flash card</div>\n                        <div className={getCls('list-action')} onClick={() => { quizletReq() }}>Quizlet</div>\n                    </div>\n                }\n            </div>\n        )\n    }\n\n    const getCommand = () => {\n        if (data.command) return '#' + data.command\n        return ''\n    }\n\n    const getList = () => {\n        return (\n            <div className={getCls('gDhZZyqJTsAcIbvq')}>\n                {/* time */}\n                <div className={getCls('time')}>\n                    {createDate()}\n                </div>\n\n                {/* branch roots branches */}\n                <div className={getCls('parentW1')}>\n                    <div className={getCls('U7q')}>\n                        {parents.length > 0 && parents.map(parent => (\n                            <Link to={'/' + parent._id} key={parent._id} className={getCls('link') + ' VH9sY'}>\n                                <span className='mDCcQ'>/</span>\n                                <span className='JpN'>{parent.name}</span>\n                            </Link>\n                        ))}\n                    </div>\n                </div>\n\n\n                {/* branch title */}\n                <div className={getCls('branch-list-header')} style={{ textAlign: `${p.listAlign}` }}>\n                    <h1> {branchTitle.map(e => (\n                        <div key={getRandId()} className={getCls('branch-list-title')}>{e}</div>\n                    ))} </h1>\n                    {/* command */}\n                    <div className={getCls('YmOebB8')}>\n                        {getCommand()}\n                    </div>\n                </div>\n\n\n                {\n                    data.children &&\n                    <List branches={data.children} isDark={isDark} location={data._id} apiBase={apiBase} setUpToDate={setUpToDate} fontSize={fontSize} p={p} ex={ex} />\n                }\n\n                {\n                    !data.children &&\n                    <List branches={data} isDark={isDark} location={data._id} apiBase={apiBase} setUpToDate={setUpToDate} fontSize={fontSize} p={p} ex={ex} />\n                }\n            </div>\n        )\n    }\n\n    const handleMove = () => {\n        AsyncForEach(sBranches, () => {\n            sBranches.forEach((branch) => {\n                const url = apiBase + '/branch'\n                const data = {\n                    id: branch._id,\n                    origin: moveTarget\n                }\n                tokenPatch(url, data, p.token).then((d) => {\n                    if (d && d._d) console.log(d._id);\n                })\n            });\n        })\n        freshBranches()\n        setSBranches([])\n\n\n    }\n\n    useEffect(() => {\n        if (!data._id) return\n        tokenGet(p.apiBase + '/branch/pBranch?id=' + data._id)\n            .then((d) => {\n                if (d.reason) return\n                setParent(d.reverse())\n            })\n    }, [data])\n\n    ex = {\n        ...ex,\n        data, setIsAction, sBranches, setSBranches, freshBranches, branchTitle\n    }\n\n\n    const getListWrapperWidth = () => {\n        if (p.navSts.isVisibleNav) {\n            return 43\n        } else {\n            return 90\n        }\n    }\n\n    const getMoveSection = () => {\n        return (\n            <div className={getCls('wrapper')}>\n                {p.navSts.isVisibleNav &&\n                    <div className={getCls('move')}>\n                        <div className={getCls('input')}>\n                            <input type=\"text\" className={getCls('VaqSI')} value={moveTarget} onChange={(e) => { setMoveTarget(e.target.value) }} />\n                        </div>\n                        <div className={getCls('move1')} onClick={handleMove}>\n                            Move\n                        </div>\n                    </div>\n                }\n            </div>\n\n        )\n    }\n\n    return (\n        <div>\n            {data &&\n                <div className={p.getCls('branch-view-wrapper')}>\n                    <div className={getCls('Rta6QukC')}>\n                        {/* right panel */}\n                        <RightPanel p={p} />\n                        {/* move */}\n                        {getMoveSection()}\n                    </div>\n\n                    {!isAction &&\n                        /* origin name and list actions */\n                        < div className={p.getCls('branch-view-container')} style={{ width: getListWrapperWidth() + 'vw' }}>\n                            <div className={getCls('root-section')}>\n                                {bOrigin()}\n                                {listActions()}\n                            </div>\n\n\n                            {getList()}\n\n\n                        </div>\n                    }\n\n\n\n\n                    {isAction && isFlashCard &&\n                        <div className={getCls('flash-card-wrapper')}>\n                            <FlashCard p={p} ex={ex} />\n                        </div>\n                    }\n                    {isAction && isQuizlet &&\n                        <div className={getCls('flash-card-wrapper')}>\n                            <Quizlet p={p} ex={ex} />\n                        </div>\n                    }\n                </div>\n            }\n        </div >\n    )\n}\n\nfunction getRandId() {\n    return Math.random() * (200000 - 0) + 0\n}\n\nexport default BranchView\n"]},"metadata":{},"sourceType":"module"}