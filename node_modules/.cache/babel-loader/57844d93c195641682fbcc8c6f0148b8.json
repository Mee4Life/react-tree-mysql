{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\React\\\\tree-mysql\\\\src\\\\pages\\\\html\\\\HTMLV.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport { tokenGet } from '../../utils/functions';\nimport htmlv from './htmlv.css';\n\nfunction HTMLV(props) {\n  _s();\n\n  const {\n    p\n  } = props;\n\n  const getCls = base => {\n    return p.getCls('yFAmjB-' + base);\n  };\n\n  const [branch, setBranch] = useState(null);\n  const [titleFontSize, setTitleFontSize] = useState(30);\n  const [fontSize, setFontSize] = useState(20);\n  const [padding, setPadding] = useState(16);\n  const [isNumbered, setIsNumbered] = useState(false);\n  const id = useParams().id;\n  useEffect(() => {\n    // fetch branch from db \n    tokenGet(p.apiBase + '/branch?id=' + id).then(d => {\n      setBranch(d);\n    });\n  }, []);\n  let counter = 0;\n\n  const getTitle = () => {\n    return /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: getCls('title'),\n      children: branch.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this);\n  };\n\n  const getContent = b => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: getCls('cont1'),\n      style: {\n        direction: 'rtl',\n        fontSize: fontSize + 'px',\n        paddingBottom: padding + 'px'\n      },\n      children: [isNumbered && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: getCls('counter'),\n        children: ++counter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 32\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: getCls('name'),\n        children: b.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, b._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: getCls('wrapper0'),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: getCls('actions'),\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: getCls('action'),\n        onClick: () => {\n          setFontSize(fontSize + 2);\n        },\n        children: [\"large text \", fontSize]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: getCls('action'),\n        onClick: () => {\n          setFontSize(fontSize - 2);\n        },\n        children: [\"small text \", fontSize]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: getCls('action'),\n        onClick: () => {\n          setPadding(padding + 8);\n        },\n        children: [\"bigger Padding \", padding]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: getCls('action'),\n        onClick: () => {\n          setPadding(padding - 8);\n        },\n        children: [\"smaller Padding \", padding]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: getCls('action'),\n        onClick: () => {\n          setIsNumbered(!isNumbered);\n        },\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-sort-numeric-down\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), branch && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: getCls('wrapper'),\n      children: [getTitle(), branch.children.map(b => getContent(b))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_s(HTMLV, \"l1D0PaWHTita1rFgwxj+B754ZSo=\", false, function () {\n  return [useParams];\n});\n\n_c = HTMLV;\nexport default HTMLV;\n\nvar _c;\n\n$RefreshReg$(_c, \"HTMLV\");","map":{"version":3,"sources":["F:/React/tree-mysql/src/pages/html/HTMLV.js"],"names":["React","useEffect","useState","useParams","tokenGet","htmlv","HTMLV","props","p","getCls","base","branch","setBranch","titleFontSize","setTitleFontSize","fontSize","setFontSize","padding","setPadding","isNumbered","setIsNumbered","id","apiBase","then","d","counter","getTitle","name","getContent","b","direction","paddingBottom","_id","children","map"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router'\nimport { tokenGet } from '../../utils/functions'\nimport htmlv from './htmlv.css'\n\n\nfunction HTMLV(props) {\n    const { p } = props\n    const getCls = (base) => { return p.getCls('yFAmjB-' + base) }\n\n    const [branch, setBranch] = useState(null)\n    const [titleFontSize, setTitleFontSize] = useState(30)\n    const [fontSize, setFontSize] = useState(20)\n    const [padding, setPadding] = useState(16)\n    const [isNumbered, setIsNumbered] = useState(false)\n\n    const id = useParams().id\n    useEffect(() => {\n        // fetch branch from db \n        tokenGet(p.apiBase + '/branch?id=' + id).then((d) => {\n            setBranch(d)\n        })\n    }, [])\n\n    let counter = 0\n\n    const getTitle = () => {\n        return (\n            <h3 className={getCls('title')} >{branch.name}</h3>\n        )\n    }\n\n    const getContent = (b) => {\n        return (\n            <div key={b._id} className={getCls('cont1')} style={{ direction: 'rtl', fontSize: fontSize + 'px', paddingBottom: padding + 'px' }}>\n                {isNumbered && <span className={getCls('counter')}>{++counter}</span>}\n                <span className={getCls('name')}>{b.name}</span>\n            </div>\n        )\n    }\n\n    return (\n        <div className={getCls('wrapper0')}>\n            {/* view options */}\n            <div className={getCls('actions')}>\n                {/* large text */}\n                <span className={getCls('action')} onClick={() => {\n                    setFontSize(fontSize + 2)\n                }} >large text {fontSize}</span>\n                {/* small text */}\n                <span className={getCls('action')} onClick={() => {\n                    setFontSize(fontSize - 2)\n                }} >small text {fontSize}</span>\n                {/* large padding */}\n                <span className={getCls('action')} onClick={() => {\n                    setPadding(padding + 8)\n                }} >bigger Padding {padding}</span>\n                {/* small padding */}\n                <span className={getCls('action')} onClick={() => {\n                    setPadding(padding - 8)\n                }} >smaller Padding {padding}</span>\n                {/* show numbers     */}\n                <span className={getCls('action')} onClick={() => {\n                    setIsNumbered(!isNumbered)\n                }} ><i className=\"fas fa-sort-numeric-down\"></i></span>\n            </div>\n\n            {branch && <div className={getCls('wrapper')}>\n                {/* title */}\n                {getTitle()}\n                {/* list */}\n                {branch.children.map(b => (\n                    getContent(b)\n                ))}\n            </div>}\n        </div>\n\n    )\n}\n\n\nexport default HTMLV\n\n"]},"metadata":{},"sourceType":"module"}