{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\React\\\\tree-mysql\\\\src\\\\Components\\\\branches\\\\list\\\\List.js\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect, useState } from 'react';\nimport Single from '../single/Single';\nimport New from '../new/New';\nimport Edit from '../edit/Edit';\nimport './list.css';\n\nfunction List(props) {\n  _s();\n\n  const {\n    isDark,\n    location,\n    apiBase,\n    setUpToDate,\n    fontSize,\n    p,\n    ex\n  } = props;\n  const [branches, setBranches] = useState([]);\n  const {\n    sBranches,\n    setSBranches\n  } = ex;\n  const [isEdit, setEdit] = useState(false);\n  const [branchToEdit, setBranchToEdit] = useState(null);\n  useEffect(() => {\n    console.log(location); // const url = p.apiBase2 + '/branches/nested?id=' + location\n  }, []);\n\n  const getCls = base => {\n    return p.getCls('avGSVSTAflist-' + base);\n  };\n\n  let counted = 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list\",\n    children: [!isEdit && /*#__PURE__*/_jsxDEV(New, {\n      location: location,\n      isDark: isDark,\n      apiBase: apiBase,\n      setUpToDate: setUpToDate,\n      p: p\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: getCls('branchesW') + \" branches-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: getCls('branchesC') + \" branches-container\",\n        style: {\n          fontSize: fontSize\n        },\n        children: [console.log('branches', branches), branches.map(branch => /*#__PURE__*/_jsxDEV(Single, {\n          branch: branch,\n          isDark: isDark,\n          apiBase: apiBase,\n          location: location,\n          setData: setUpToDate,\n          setEdit: setEdit,\n          setBranch: setBranchToEdit,\n          selectedBranches: sBranches,\n          setSelected: setSBranches,\n          p: p,\n          counted: ++counted,\n          ex: ex\n        }, branch.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), isEdit && /*#__PURE__*/_jsxDEV(Edit, {\n      location: location,\n      isDark: isDark,\n      apiBase: apiBase,\n      setUpToDate: setUpToDate,\n      branch: branchToEdit,\n      setEdit: setEdit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n\n_s(List, \"+h96uXY1fqBCDnaJEGRPHIVNMbg=\");\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["F:/React/tree-mysql/src/Components/branches/list/List.js"],"names":["React","useEffect","useState","Single","New","Edit","List","props","isDark","location","apiBase","setUpToDate","fontSize","p","ex","branches","setBranches","sBranches","setSBranches","isEdit","setEdit","branchToEdit","setBranchToEdit","console","log","getCls","base","counted","map","branch","id"],"mappings":"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","sourcesContent":["import { React, useEffect, useState } from 'react'\nimport Single from '../single/Single'\nimport New from '../new/New'\nimport Edit from '../edit/Edit'\nimport './list.css'\n\nfunction List(props) {\n    const { isDark, location, apiBase, setUpToDate, fontSize, p, ex } = props\n    const [branches, setBranches] = useState([])\n    const { sBranches, setSBranches } = ex\n    const [isEdit, setEdit] = useState(false)\n    const [branchToEdit, setBranchToEdit] = useState(null)\n\n\n    useEffect(() => {\n        console.log(location)\n        // const url = p.apiBase2 + '/branches/nested?id=' + location\n    }, [])\n\n    const getCls = (base) => {\n        return p.getCls('avGSVSTAflist-' + base)\n    }\n\n    let counted = 0\n\n    return (\n        <div className=\"list\">\n            \n            {!isEdit &&\n                <New location={location} isDark={isDark} apiBase={apiBase} setUpToDate={setUpToDate} p={p} />\n            }\n\n            <div className={getCls('branchesW') + \" branches-wrapper\"}>\n                <div className={getCls('branchesC') + \" branches-container\"} style={{ fontSize: fontSize }}>\n                    {console.log('branches', branches)}\n                    {branches.map(branch => (\n                        <Single key={branch.id} branch={branch} isDark={isDark} apiBase={apiBase} location={location} setData={setUpToDate} setEdit={setEdit} setBranch={setBranchToEdit} selectedBranches={sBranches} setSelected={setSBranches} p={p} counted={++counted} ex={ex} />\n                    ))}\n                </div>\n                {/* <Navi apiBase={apiBase} handleMove={handleMove} resMsg={resMsg} setResMsg={setResMsg} /> */}\n            </div>\n\n            {isEdit &&\n                <Edit location={location} isDark={isDark} apiBase={apiBase} setUpToDate={setUpToDate} branch={branchToEdit} setEdit={setEdit} />\n            }\n        </div>\n    )\n}\n\nexport default List\n"]},"metadata":{},"sourceType":"module"}