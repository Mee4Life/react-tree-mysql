{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"F:\\\\React\\\\tree-react-mysql\\\\src\\\\Components\\\\branches\\\\Quizlet.js\";\nimport React from 'react';\n\nfunction Quizlet(props) {\n  const {\n    p,\n    ex\n  } = props;\n  const {\n    data,\n    setIsAction\n  } = props.ex;\n\n  const getCls = base => {\n    return p.getCls('fc-' + base);\n  };\n\n  const exit = () => {\n    setIsAction(false);\n  };\n\n  const exitBtn = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: getCls('action-cont') + ' fs-close-icon',\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: getCls('exit') + ' far fa-times-circle',\n        onClick: () => {\n          exit();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this);\n  };\n\n  const getQuizletText = () => {\n    const list = data.children;\n    if (list.length <= 0) return;\n    let d = '';\n    let counter = 0;\n    list.forEach(e => {\n      counter++;\n      d = d + e.name + ',:';\n    });\n    return d;\n  };\n\n  const getQuizletTextWithCounter = () => {\n    const list = data.children;\n    if (list.length <= 0) return;\n    let d = '';\n    let counter = 0;\n    list.forEach(e => {\n      counter++;\n      d = d + counter + ',' + e.name + ':';\n    });\n    return d;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: getCls('container'),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: getCls('actions'),\n      children: exitBtn()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: getCls('content'),\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Content : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), getQuizletText(), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"With Counter \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), getQuizletTextWithCounter()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Quizlet;\nexport default Quizlet;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quizlet\");","map":{"version":3,"sources":["F:/React/tree-react-mysql/src/Components/branches/Quizlet.js"],"names":["React","Quizlet","props","p","ex","data","setIsAction","getCls","base","exit","exitBtn","getQuizletText","list","children","length","d","counter","forEach","e","name","getQuizletTextWithCounter"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAEpB,QAAM;AAAEC,IAAAA,CAAF;AAAKC,IAAAA;AAAL,MAAYF,KAAlB;AACA,QAAM;AAAEG,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAwBJ,KAAK,CAACE,EAApC;;AAEA,QAAMG,MAAM,GAAIC,IAAD,IAAU;AACrB,WAAOL,CAAC,CAACI,MAAF,CAAS,QAAQC,IAAjB,CAAP;AACH,GAFD;;AAIA,QAAMC,IAAI,GAAG,MAAM;AACfH,IAAAA,WAAW,CAAC,KAAD,CAAX;AACH,GAFD;;AAIA,QAAMI,OAAO,GAAG,MAAM;AAClB,wBACI;AAAK,MAAA,SAAS,EAAEH,MAAM,CAAC,aAAD,CAAN,GAAwB,gBAAxC;AAAA,6BACI;AAAG,QAAA,SAAS,EAAEA,MAAM,CAAC,MAAD,CAAN,GAAiB,sBAA/B;AACI,QAAA,OAAO,EAAE,MAAM;AAAEE,UAAAA,IAAI;AAAI;AAD7B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH,GAPD;;AASA,QAAME,cAAc,GAAE,MAAM;AACxB,UAAMC,IAAI,GAAGP,IAAI,CAACQ,QAAlB;AACA,QAAGD,IAAI,CAACE,MAAL,IAAe,CAAlB,EAAqB;AACrB,QAAIC,CAAC,GAAG,EAAR;AACA,QAAIC,OAAO,GAAG,CAAd;AACAJ,IAAAA,IAAI,CAACK,OAAL,CAAaC,CAAC,IAAI;AACdF,MAAAA,OAAO;AACPD,MAAAA,CAAC,GAAGA,CAAC,GAAGG,CAAC,CAACC,IAAN,GAAa,IAAjB;AACH,KAHD;AAIA,WAAOJ,CAAP;AACH,GAVD;;AAWA,QAAMK,yBAAyB,GAAE,MAAM;AACnC,UAAMR,IAAI,GAAGP,IAAI,CAACQ,QAAlB;AACA,QAAGD,IAAI,CAACE,MAAL,IAAe,CAAlB,EAAqB;AACrB,QAAIC,CAAC,GAAG,EAAR;AACA,QAAIC,OAAO,GAAG,CAAd;AACAJ,IAAAA,IAAI,CAACK,OAAL,CAAaC,CAAC,IAAI;AACdF,MAAAA,OAAO;AACPD,MAAAA,CAAC,GAAGA,CAAC,GAAGC,OAAJ,GAAc,GAAd,GAAoBE,CAAC,CAACC,IAAtB,GAA6B,GAAjC;AACH,KAHD;AAIA,WAAOJ,CAAP;AACH,GAVD;;AAYA,sBACI;AAAK,IAAA,SAAS,EAAER,MAAM,CAAC,WAAD,CAAtB;AAAA,4BACI;AAAK,MAAA,SAAS,EAAEA,MAAM,CAAC,SAAD,CAAtB;AAAA,gBACKG,OAAO;AADZ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAK,MAAA,SAAS,EAAEH,MAAM,CAAC,SAAD,CAAtB;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKI,cAAc,EAFnB,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,EAIKS,yBAAyB,EAJ9B;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH;;KA1DQnB,O;AA4DT,eAAeA,OAAf","sourcesContent":["import React from 'react'\n\nfunction Quizlet(props) {\n\n    const { p, ex } = props\n    const { data, setIsAction } = props.ex\n\n    const getCls = (base) => {\n        return p.getCls('fc-' + base)\n    }\n\n    const exit = () => {\n        setIsAction(false)\n    }\n\n    const exitBtn = () => {\n        return (\n            <div className={getCls('action-cont') + ' fs-close-icon'}>\n                <i className={getCls('exit') + ' far fa-times-circle'}\n                    onClick={() => { exit() }}></i>\n            </div>\n        )\n    }\n\n    const getQuizletText= () => { \n        const list = data.children\n        if(list.length <= 0) return \n        let d = ''\n        let counter = 0\n        list.forEach(e => {\n            counter ++ \n            d = d + e.name + ',:'\n        });\n        return d\n    } \n    const getQuizletTextWithCounter= () => { \n        const list = data.children\n        if(list.length <= 0) return \n        let d = ''\n        let counter = 0\n        list.forEach(e => {\n            counter ++ \n            d = d + counter + ',' + e.name + ':'\n        });\n        return d\n    }\n\n    return (\n        <div className={getCls('container')}>\n            <div className={getCls('actions')}>\n                {exitBtn()}\n            </div>\n            <div className={getCls('content')}>\n                <h2>Content : </h2>\n                {getQuizletText()}\n                <h2>With Counter </h2>\n                {getQuizletTextWithCounter()}\n            </div>\n        </div>\n    )\n}\n\nexport default Quizlet\n"]},"metadata":{},"sourceType":"module"}