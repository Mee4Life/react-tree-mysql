{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\React\\\\tree-mysql\\\\src\\\\Components\\\\navbar\\\\register\\\\Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './register.css';\nimport postData from '../../../utils/PostRequest';\n\nfunction Register(props) {\n  _s();\n\n  const p = props.p;\n  const userController = props.userController;\n  const [inProg, setInProg] = useState(false);\n  const [success, setSuccess] = useState(null);\n  const [err, setErr] = useState(null);\n  const [email, setEmail] = useState(null);\n  const [password, setPass] = useState(null);\n  const [fname, setFname] = useState(null);\n  const [lname, setLname] = useState(null);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register-modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"register-modal-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"register-modal-title\",\n          children: \"Me 4 Life \\xA0|\\xA0  Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"register-modal-close\",\n          onClick: () => p.setIsRegister(false),\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-times\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 99\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), !success && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"register-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Email\",\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"first name\",\n          onChange: e => setFname(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"last name\",\n          onChange: e => setLname(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          onChange: e => setPass(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this), err && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-container\",\n          children: err\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 29\n        }, this), !inProg && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"register-submit\",\n          onClick: handleRegister,\n          children: \"Register \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 29\n        }, this), inProg && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinnerContainer\",\n          style: {\n            marginTop: 24\n          },\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-spinner login-spinner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"register-success\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-check-circle register-success-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"register-success-msg\",\n          children: [\"Welcome \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: userController.userCard.fname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 37\n          }, this), \" ,\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 29\n          }, this), \"Contact \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"mailto:hazim6163@gmail.com\",\n            children: \"Admin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 37\n          }, this), \" to activate your Account.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n\n  function handleRegister() {\n    setInProg(true);\n    const url = p.apiBase2 + '/users/register';\n    const data = {\n      email,\n      password,\n      fname,\n      lname\n    };\n    postData(url, data).then(res => {\n      if (res.msg) {\n        // setting the usercard:\n        userController.setUserCard({\n          fname: data.fname,\n          lname: data.lname,\n          email: data.email\n        });\n        setSuccess(true);\n        setInProg(false);\n      } else {\n        if (res.error) setErr(res.error);\n        if (res.errMsg) setErr(res.errMsg);\n        setInProg(false);\n        setTimeout(() => {\n          setErr(null);\n        }, 2000);\n      }\n    });\n  }\n}\n\n_s(Register, \"6g/1U5/asyXy97byvQEyj9NBUbc=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["F:/React/tree-mysql/src/Components/navbar/register/Register.js"],"names":["React","useState","postData","Register","props","p","userController","inProg","setInProg","success","setSuccess","err","setErr","email","setEmail","password","setPass","fname","setFname","lname","setLname","setIsRegister","e","target","value","handleRegister","marginTop","userCard","url","apiBase2","data","then","res","msg","setUserCard","error","errMsg","setTimeout"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport './register.css'\nimport postData from '../../../utils/PostRequest'\n\nfunction Register(props) {\n    const p = props.p\n    const userController = props.userController\n    const [inProg, setInProg] = useState(false)\n    const [success, setSuccess] = useState(null)\n    const [err, setErr] = useState(null)\n    const [email, setEmail] = useState(null)\n    const [password, setPass] = useState(null)\n    const [fname, setFname] = useState(null)\n    const [lname, setLname] = useState(null)\n\n\n    return (\n        <div className=\"modal-wrapper\">\n            <div className=\"register-modal\">\n                <div className=\"register-modal-header\">\n                    <div className=\"register-modal-title\">Me 4 Life &nbsp;|&nbsp;  Register</div>\n                    <span className='register-modal-close' onClick={() => p.setIsRegister(false)}><i className=\"fas fa-times\"></i></span>\n                </div>\n                {!success &&\n                    <div className=\"register-form\">\n                        <input type=\"email\" placeholder=\"Email\" onChange={(e) => setEmail(e.target.value)} />\n                        <input type=\"text\" placeholder=\"first name\" onChange={(e) => setFname(e.target.value)} />\n                        <input type=\"text\" placeholder=\"last name\" onChange={(e) => setLname(e.target.value)} />\n                        <input type=\"password\" placeholder=\"Password\" onChange={(e) => setPass(e.target.value)} />\n                        {err &&\n                            <div className=\"error-container\">\n                                {err}\n                            </div>\n                        }\n                        {!inProg &&\n                            <span className=\"register-submit\" onClick={handleRegister}>Register </span>\n                        }\n                        {inProg &&\n                            <div className=\"spinnerContainer\" style={{ marginTop: 24 }}>\n                                <i className=\"fas fa-spinner login-spinner\"></i>\n                            </div>\n                        }\n                    </div>\n                }\n                {success &&\n                    <div className=\"register-success\">\n                        <i className=\"fas fa-check-circle register-success-icon\"></i>\n                        <span></span>\n                        <div className=\"register-success-msg\">\n                            Welcome <b>{userController.userCard.fname}</b> ,\n                            <br />\n                            <br />\n                            Contact <a href=\"mailto:hazim6163@gmail.com\">Admin</a> to activate your Account.</div>\n                    </div>\n                }\n            </div>\n        </div>\n    )\n\n    function handleRegister() {\n        setInProg(true)\n        const url = p.apiBase2 + '/users/register'\n        const data = { email, password, fname, lname }\n        postData(url, data)\n            .then(res => {\n                if (res.msg) {\n                    // setting the usercard:\n                    userController.setUserCard({fname: data.fname, lname: data.lname, email: data.email})\n                    setSuccess(true)\n                    setInProg(false)\n                }\n                else {\n                    if (res.error)\n                        setErr(res.error)\n                    if (res.errMsg)\n                        setErr(res.errMsg)\n                    setInProg(false)\n                    setTimeout(() => {\n                        setErr(null)\n                    }, 2000);\n                }\n            })\n    }\n}\n\nexport default Register\n"]},"metadata":{},"sourceType":"module"}