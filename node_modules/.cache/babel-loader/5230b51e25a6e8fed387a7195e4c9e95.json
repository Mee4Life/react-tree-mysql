{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\React\\\\tree-mysql\\\\src\\\\Components\\\\timeline\\\\TimeLineHeader.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState } from 'react';\nimport \"./style.css\";\nimport getReqHeader from '../../utils/getReqHeader';\n\nfunction TimeLineHeader(props) {\n  _s();\n\n  const {\n    p\n  } = props;\n  const [location, setLocation] = useState('/timeline');\n  const {\n    setData,\n    setIsProg,\n    isDate,\n    setIsDate\n  } = props.ex;\n  const [inputVal, setInputVal] = useState(null);\n\n  const handleBranchChange = e => {\n    // store input value to the state\n    setInputVal(e.target.value);\n  };\n\n  const getCls = base => {\n    return p.getCls(\"time-line-header-\" + base);\n  };\n\n  const downClk = () => {\n    // check if url id\n    if (location === '/timeline') {} // check if input id\n\n\n    if (inputVal.trim().length > 3) {\n      setIsProg(true); // send request. \n\n      const url = p.apiBase + '/branch/timeline?id=' + inputVal + '&dir=before';\n      getReqHeader(url, {\n        token: p.token\n      }).then(d => {\n        setData(d);\n        setIsProg(false);\n      });\n    }\n  };\n\n  const upClk = () => {\n    // check if url id\n    if (location === '/timeline') {} // check if input id\n\n\n    if (inputVal.trim().length > 3) {\n      setIsProg(true); // send request. \n\n      const url = p.apiBase + '/branch/timeline?id=' + inputVal + '&dir=after';\n      getReqHeader(url, {\n        token: p.token\n      }).then(d => {\n        setIsProg(false);\n        setData(d);\n      });\n    }\n  };\n\n  const toggleDate = () => {\n    setIsDate(!isDate);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: getCls('wrapper'),\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => downClk(),\n      children: \" before \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => {\n        handleBranchChange(e);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => upClk(),\n      children: \" after \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      onClick: () => toggleDate(),\n      className: \"\",\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-clock \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 61\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TimeLineHeader, \"N2/ds0mf/OK5a5cOavHyKJsmEqo=\");\n\n_c = TimeLineHeader;\nexport default TimeLineHeader;\n\nvar _c;\n\n$RefreshReg$(_c, \"TimeLineHeader\");","map":{"version":3,"sources":["F:/React/tree-mysql/src/Components/timeline/TimeLineHeader.js"],"names":["React","useState","getReqHeader","TimeLineHeader","props","p","location","setLocation","setData","setIsProg","isDate","setIsDate","ex","inputVal","setInputVal","handleBranchChange","e","target","value","getCls","base","downClk","trim","length","url","apiBase","token","then","d","upClk","toggleDate"],"mappings":"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","sourcesContent":["import { React, useState } from 'react'\nimport \"./style.css\"\nimport getReqHeader from '../../utils/getReqHeader'\n\n\nfunction TimeLineHeader(props) {\n    const { p } = props\n    const [location, setLocation] = useState('/timeline')\n    const { setData, setIsProg, isDate, setIsDate } = props.ex\n    const [inputVal, setInputVal] = useState(null)\n\n    const handleBranchChange = (e) => {\n        // store input value to the state\n        setInputVal(e.target.value)\n    }\n\n    const getCls = (base) => {\n        return p.getCls(\"time-line-header-\" + base)\n    }\n\n\n    const downClk = () => {\n        // check if url id\n        if (location === '/timeline') {\n\n        }\n        // check if input id\n        if (inputVal.trim().length > 3) {\n            setIsProg(true)\n            // send request. \n            const url = p.apiBase + '/branch/timeline?id=' + inputVal + '&dir=before'\n            getReqHeader(url, { token: p.token }).then(d => {\n                setData(d)\n                setIsProg(false)\n            })\n\n        }\n    }\n    const upClk = () => {\n        // check if url id\n        if (location === '/timeline') {\n\n        }\n        // check if input id\n        if (inputVal.trim().length > 3) {\n            setIsProg(true)\n            // send request. \n            const url = p.apiBase + '/branch/timeline?id=' + inputVal + '&dir=after'\n            getReqHeader(url, { token: p.token }).then(d => {\n                setIsProg(false)\n                setData(d)\n            })\n\n        }\n    }\n\n    const toggleDate = () => {\n        setIsDate(!isDate)\n    }\n\n    return (\n        <div className={getCls('wrapper')}>\n            <button onClick={() => downClk()}> before </button>\n            <input type=\"text\" onChange={(e) => { handleBranchChange(e) }} />\n            <button onClick={() => upClk()}> after </button>\n            <span onClick={() => toggleDate()} className=\"\"><i className=\"fas fa-clock \"></i></span>\n             \n        </div>\n    )\n}\n\nexport default TimeLineHeader\n"]},"metadata":{},"sourceType":"module"}