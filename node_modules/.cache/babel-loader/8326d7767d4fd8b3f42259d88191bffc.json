{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\React\\\\tree-mysql\\\\src\\\\pages\\\\Branch.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport BranchView from '../Components/branches/BranchView';\nimport { axiosTokenHeader, tokenGet } from '../utils/functions';\nimport Helmet from 'react-helmet';\nimport axios from 'axios';\n\nfunction Branch(props) {\n  _s();\n\n  const {\n    p\n  } = props;\n  const [data, setData] = useState(null);\n  const [origin, setOrigin] = useState({});\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n  const {\n    isDark,\n    apiBase,\n    fontSize,\n    apiBase2,\n    token\n  } = props.p;\n  const {\n    id\n  } = useParams();\n  let url;\n\n  if (id) {\n    url = apiBase2 + '/branches/nested?id=' + id;\n  } else {\n    url = apiBase2 + '/branches/root';\n  }\n\n  const getBranchData = data => {\n    const childID = data[0].id;\n    axios.get(apiBase2 + '/branches/origin?id' + childID, axiosTokenHeader(p.token));\n  };\n\n  const freshBranches = () => {\n    tokenGet(url, {\n      Authorization: token\n    }).then(data => {\n      setIsPending(false);\n      setData(data);\n      setError(null);\n    }).catch(err => {\n      if (err.name === 'AbortError') {\n        console.log('fetch aborted');\n      } else {\n        // auto catches network / connection error\n        setIsPending(false);\n        setError(err.message);\n      }\n    });\n  };\n\n  useEffect(() => {\n    freshBranches();\n  }, [url]);\n  useEffect(() => {\n    if (data) {\n      const url = apiBase2 + '/branches/origin?id=' + data[0].parentID;\n      console.log('url', url);\n    }\n  }, []);\n  const ex = {\n    freshBranches\n  };\n\n  const getTitle = () => {\n    if (data && data.name) return data.name;else return 'Me 4 Life';\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [data && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'wrapper',\n      children: [/*#__PURE__*/_jsxDEV(Helmet, {\n        children: /*#__PURE__*/_jsxDEV(\"title\", {\n          children: getTitle()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(BranchView, {\n        isDark: isDark,\n        data: data,\n        isPending: isPending,\n        apiBase: apiBase,\n        setUpToDate: setData,\n        fontSize: fontSize,\n        p: props.p,\n        ex: ex\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }, this), isPending && /*#__PURE__*/_jsxDEV(\"i\", {\n      className: \"fas fa-spinner spinner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 27\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", error, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Branch, \"NZMl04kCUKzGvvf+A2EqKmRA2o8=\", false, function () {\n  return [useParams];\n});\n\n_c = Branch;\nexport default Branch;\n\nvar _c;\n\n$RefreshReg$(_c, \"Branch\");","map":{"version":3,"sources":["F:/React/tree-mysql/src/pages/Branch.js"],"names":["React","useState","useEffect","useParams","BranchView","axiosTokenHeader","tokenGet","Helmet","axios","Branch","props","p","data","setData","origin","setOrigin","isPending","setIsPending","error","setError","isDark","apiBase","fontSize","apiBase2","token","id","url","getBranchData","childID","get","freshBranches","Authorization","then","catch","err","name","console","log","message","parentID","ex","getTitle"],"mappings":"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","sourcesContent":["import { React, useState, useEffect } from 'react'\nimport { useParams } from 'react-router-dom'\nimport BranchView from '../Components/branches/BranchView'\nimport { axiosTokenHeader, tokenGet } from '../utils/functions'\nimport Helmet from 'react-helmet'\nimport axios from 'axios'\n\nfunction Branch(props) {\n    const {p} = props\n    const [data, setData] = useState(null);\n    const [origin, setOrigin] = useState({})\n    const [isPending, setIsPending] = useState(true);\n    const [error, setError] = useState(null);\n    const { isDark, apiBase, fontSize, apiBase2, token } = props.p\n    const { id } = useParams()\n    let url;\n    if (id) {\n        url = apiBase2 + '/branches/nested?id=' + id\n    } else {\n        url = apiBase2 + '/branches/root'\n    }\n\n    const getBranchData = (data) => {\n        const childID = data[0].id\n        axios.get(apiBase2 + '/branches/origin?id' + childID, axiosTokenHeader(p.token))\n    }\n\n    const freshBranches = () => {\n        tokenGet(url, { Authorization: token })\n            .then(data => {\n                setIsPending(false);\n                setData(data);\n                setError(null);\n            })\n            .catch(err => {\n                if (err.name === 'AbortError') {\n                    console.log('fetch aborted')\n                } else {\n                    // auto catches network / connection error\n                    setIsPending(false);\n                    setError(err.message);\n                }\n            })\n    }\n\n    useEffect(() => {\n\n        freshBranches()\n\n    }, [url])\n\n\n    useEffect(() => {\n        if (data) {\n            const url = apiBase2 + '/branches/origin?id=' + data[0].parentID\n            console.log('url', url)\n        }\n    }, [])\n\n    const ex = {\n        freshBranches\n    }\n\n    const getTitle = () => {\n        if (data && data.name) return data.name\n        else return 'Me 4 Life'\n    }\n\n    return (\n        <div>\n            {data &&\n                <div className={'wrapper'}>\n                    <Helmet>\n                        <title>{getTitle()}</title>\n                    </Helmet>\n                    <BranchView isDark={isDark} data={data} isPending={isPending} apiBase={apiBase} setUpToDate={setData} fontSize={fontSize} p={props.p} ex={ex} />\n                </div>\n\n            }\n            {isPending && <i className=\"fas fa-spinner spinner\"></i>}\n            {error && <div> {error} </div>}\n        </div>\n    )\n}\n\nexport default Branch\n"]},"metadata":{},"sourceType":"module"}