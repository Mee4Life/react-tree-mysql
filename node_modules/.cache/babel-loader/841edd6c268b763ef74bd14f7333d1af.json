{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\React\\\\tree-react-mysql\\\\src\\\\Components\\\\byTime\\\\by-time-item.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { deleteWHeader } from '../../utils/functions';\nimport ReactEmbedGist from 'react-embed-gist';\nimport ReactAudioPlayer from 'react-audio-player';\nimport { Player } from 'video-react';\n\nfunction ByTimeItem(props) {\n  _s();\n\n  // extract data \n  const {\n    branch,\n    ex\n  } = props;\n  const {\n    isDark\n  } = ex.p; // create state \n\n  const [isDeleted, setIsDeleted] = useState(false); // functions\n\n  const getCls = base => {\n    return ex.p.getCls('by-time-item-' + base);\n  };\n\n  const getDate = () => {\n    const date = new Date(branch.createdAt);\n    let year, month, day, hour, min;\n    year = date.getFullYear();\n    month = date.getMonth() + 1;\n    day = date.getDate() + 1;\n    hour = date.getHours() + 1;\n    min = date.getMinutes() + 1;\n    hour < 10 ? hour = '0' + hour : hour = hour;\n    min < 10 ? min = '0' + min : min = min;\n    day < 10 ? day = '0' + day : day = day;\n    month < 10 ? month = '0' + month : month = month;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: getCls('date'),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: getCls('date-date'),\n        children: [day, \" . \", month, \" . \", year, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: getCls('date-time'),\n        children: [\" \", hour, \" : \", min, \"  \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this);\n  };\n\n  const handleRemove = () => {\n    const url = ex.p.apiBase + '/branch?id=' + branch._id;\n    deleteWHeader(url, {\n      token: ex.p.token\n    }).then(d => {\n      console.log(d);\n      setIsDeleted(true);\n      console.log(d);\n    });\n  };\n\n  const branchDir = () => {\n    if (branch.lang == 'ar') return 'rtl';else return 'ltr';\n  };\n\n  function getWindowDimensions() {\n    const {\n      innerWidth: width,\n      innerHeight: height\n    } = window;\n    return {\n      width,\n      height\n    };\n  }\n\n  const getLinkContent = () => {\n    let res = '';\n\n    if (branch.extra && branch.extra.name) {\n      res = /*#__PURE__*/_jsxDEV(Link, {\n        className: ex.p.getCls('link'),\n        to: '/' + branch.name,\n        children: branch.extra.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 20\n      }, this);\n    } else {\n      res = /*#__PURE__*/_jsxDEV(Link, {\n        className: ex.p.getCls('link'),\n        to: '/' + branch.name,\n        children: branch.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 20\n      }, this);\n    }\n\n    return res;\n  };\n\n  const getTextContent = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: branch.name.replace(\"<br>\", \"\").replace(/\\n\\n/g, \"<br>\").replace(/\\n/g, \"<br>\")\n      },\n      className: `link branch-name-byTime ${isDark ? \"dark-link\" : \"light-link\"}`,\n      style: ({\n        direction: `${branchDir()}`\n      }, {\n        fontSize: ex.p.fontSize\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 16\n    }, this);\n  };\n\n  const getYoutubeSource = () => {\n    return \"https://www.youtube.com/embed/\" + branch.name;\n  };\n\n  const getYoutubeContent = () => {\n    // check client width : \n    if (getWindowDimensions().width > 600) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"youtube-container\",\n        children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n          width: \"auto\",\n          height: \"auto\",\n          src: getYoutubeSource(),\n          frameborder: \"0\",\n          allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n          allowfullscreen: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"youtube-container\",\n        children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n          width: \"300\",\n          height: \"250\",\n          src: getYoutubeSource(),\n          frameborder: \"0\",\n          allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n          allowfullscreen: \"true\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 20\n      }, this);\n    }\n  };\n\n  const getGistContent = () => {\n    return /*#__PURE__*/_jsxDEV(ReactEmbedGist, {\n      gist: branch.name,\n      titleClass: \"gist__title\",\n      contentClass: \"gist__content\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 16\n    }, this);\n  };\n\n  const getSoundContent = () => {\n    // \n    // {branch.name}\n    const audio = /*#__PURE__*/_jsxDEV(ReactAudioPlayer, {\n      src: branch.name,\n      controls: true,\n      loop: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 23\n    }, this);\n\n    return audio;\n  };\n\n  const getImageContent = () => {\n    // check client width : \n    if (getWindowDimensions().width > 600) {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        style: {\n          maxWidth: 300\n        },\n        src: branch.name,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        style: {\n          width: 300\n        },\n        src: branch.name,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 20\n      }, this);\n    }\n  };\n\n  const getVideoContent = () => {\n    const e = /*#__PURE__*/_jsxDEV(Player, {\n      className: \"video-player\",\n      children: /*#__PURE__*/_jsxDEV(\"source\", {\n        src: branch.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 19\n    }, this);\n\n    return e;\n  };\n\n  const getBranch = () => {\n    let content;\n\n    if (branch.type === 'text') {\n      content = getTextContent();\n    }\n\n    if (branch.type === 'image') {\n      content = getImageContent();\n    }\n\n    if (branch.type === 'youtube') {\n      content = getYoutubeContent();\n    }\n\n    if (branch.type === 'gist') {\n      content = getGistContent();\n    }\n\n    if (branch.type === 'sound') {\n      content = getSoundContent();\n    }\n\n    if (branch.type === 'video') {\n      content = getVideoContent();\n    }\n\n    if (branch.type === 'link') {\n      content = getLinkContent();\n    }\n\n    return content;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !isDeleted && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: getCls('container'),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: getCls('more-container'),\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          className: getCls('more'),\n          to: \"/\" + branch._id,\n          target: \"_blank\",\n          children: \"\\u0627\\u0644\\u0645\\u0632\\u064A\\u062F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 63\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: getCls('remove'),\n          onClick: handleRemove,\n          children: \"\\u062D\\u0630\\u0641\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 148\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: getCls('name'),\n        children: getBranch()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: getCls('date-container'),\n        children: getDate()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ByTimeItem, \"zWnUhcxhN2fsaYIi53A5W3Qf/EA=\");\n\n_c = ByTimeItem;\nexport default ByTimeItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"ByTimeItem\");","map":{"version":3,"sources":["F:/React/tree-react-mysql/src/Components/byTime/by-time-item.js"],"names":["React","useState","Link","deleteWHeader","ReactEmbedGist","ReactAudioPlayer","Player","ByTimeItem","props","branch","ex","isDark","p","isDeleted","setIsDeleted","getCls","base","getDate","date","Date","createdAt","year","month","day","hour","min","getFullYear","getMonth","getHours","getMinutes","handleRemove","url","apiBase","_id","token","then","d","console","log","branchDir","lang","getWindowDimensions","innerWidth","width","innerHeight","height","window","getLinkContent","res","extra","name","getTextContent","__html","replace","direction","fontSize","getYoutubeSource","getYoutubeContent","getGistContent","getSoundContent","audio","getImageContent","maxWidth","getVideoContent","e","getBranch","content","type"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { deleteWHeader } from '../../utils/functions'\nimport ReactEmbedGist from 'react-embed-gist';\nimport ReactAudioPlayer from 'react-audio-player';\nimport { Player } from 'video-react';\n\n\nfunction ByTimeItem(props) {\n    // extract data \n    const { branch, ex } = props\n    const { isDark } = ex.p\n    // create state \n    const [isDeleted, setIsDeleted] = useState(false)\n\n    // functions\n    const getCls = (base) => {\n        return ex.p.getCls('by-time-item-' + base)\n    }\n\n    const getDate = () => {\n        const date = new Date(branch.createdAt)\n        let year, month, day, hour, min\n        year = date.getFullYear()\n        month = date.getMonth() + 1\n        day = date.getDate() + 1\n        hour = date.getHours() + 1\n        min = date.getMinutes() + 1\n\n        hour < 10 ? hour = '0' + hour : hour = hour\n        min < 10 ? min = '0' + min : min = min\n        day < 10 ? day = '0' + day : day = day\n        month < 10 ? month = '0' + month : month = month\n\n        return (\n            <div className={getCls('date')}>\n                <div className={getCls('date-date')} >{day} . {month} . {year} </div>\n                <div className={getCls('date-time')} > {hour} : {min}  </div>\n            </div>\n        )\n    }\n\n    const handleRemove = () => {\n        const url = ex.p.apiBase + '/branch?id=' + branch._id\n        deleteWHeader(url, { token: ex.p.token })\n            .then((d) => {\n                console.log(d)\n                setIsDeleted(true)\n                console.log(d);\n            })\n    }\n\n    const branchDir = () => {\n        if (branch.lang == 'ar') return 'rtl'\n        else return 'ltr'\n    }\n\n    function getWindowDimensions() {\n        const { innerWidth: width, innerHeight: height } = window;\n        return {\n            width,\n            height\n        };\n    }\n    const getLinkContent = () => {\n        let res = ''\n        if (branch.extra && branch.extra.name) {\n            res = (<Link className={ex.p.getCls('link')} to={'/' + branch.name}>{branch.extra.name}</Link>)\n        } else {\n            res = (<Link className={ex.p.getCls('link')} to={'/' + branch.name}>{branch.name}</Link>)\n        }\n\n        return res\n    }\n\n\n\n    const getTextContent = () => {\n        return <div dangerouslySetInnerHTML={{ __html: branch.name.replace(\"<br>\", \"\").replace(/\\n\\n/g, \"<br>\").replace(/\\n/g, \"<br>\") }} className={`link branch-name-byTime ${isDark ? \"dark-link\" : \"light-link\"}`} style={{ direction: `${branchDir()}` }, {fontSize: ex.p.fontSize}}>\n        </div>\n    }\n\n    const getYoutubeSource = () => {\n        return \"https://www.youtube.com/embed/\" + branch.name\n    }\n\n    const getYoutubeContent = () => {\n        // check client width : \n        if (getWindowDimensions().width > 600) {\n            return <div className=\"youtube-container\">\n                <iframe width=\"auto\" height=\"auto\" src={getYoutubeSource()} frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n            </div>\n        } else {\n            return <div className=\"youtube-container\">\n                <iframe width=\"300\" height=\"250\" src={getYoutubeSource()} frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen='true'></iframe>\n            </div>\n        }\n    }\n\n    const getGistContent = () => {\n        return <ReactEmbedGist gist={branch.name} titleClass=\"gist__title\"\n            contentClass=\"gist__content\" />\n    }\n\n    const getSoundContent = () => {\n        // \n        // {branch.name}\n        const audio = <ReactAudioPlayer\n            src={branch.name}\n            controls\n            loop\n        />\n\n        return audio\n    }\n\n    const getImageContent = () => {\n        // check client width : \n        if (getWindowDimensions().width > 600) {\n            return <img style={{ maxWidth: 300 }} src={branch.name} alt=\"\" />\n        } else {\n            return <img style={{ width: 300 }} src={branch.name} alt=\"\" />\n        }\n    }\n\n    const getVideoContent = () => {\n        const e = <Player className=\"video-player\">\n            <source src={branch.name} />\n        </Player>\n        return e\n    }\n\n    const getBranch = () => {\n        let content;\n        if (branch.type === 'text') {\n            content = getTextContent()\n        }\n        if (branch.type === 'image') {\n            content = getImageContent()\n        }\n\n        if (branch.type === 'youtube') {\n            content = getYoutubeContent()\n        }\n        if (branch.type === 'gist') {\n            content = getGistContent()\n        }\n        if (branch.type === 'sound') {\n            content = getSoundContent()\n        }\n        if (branch.type === 'video') {\n            content = getVideoContent()\n        }\n        if (branch.type === 'link') {\n            content = getLinkContent()\n        }\n\n        return content\n    }\n\n\n    return (\n        <div >\n            {!isDeleted &&\n                <div className={getCls('container')}>\n                    <div className={getCls('more-container')}><Link className={getCls('more')} to={\"/\" + branch._id} target=\"_blank\">المزيد</Link> <span className={getCls('remove')} onClick={handleRemove} >حذف</span>\n                    </div>\n\n                    <div className={getCls('name')} >{getBranch()}</div>\n                    <div className={getCls('date-container')} >{getDate()}</div>\n                </div>\n            }\n        </div>\n    )\n}\n\nexport default ByTimeItem\n"]},"metadata":{},"sourceType":"module"}