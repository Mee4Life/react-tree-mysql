{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\React\\\\tree-mysql\\\\src\\\\Components\\\\branches\\\\new\\\\tags\\\\Item.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\n\nfunction Item(props) {\n  _s();\n\n  // extract state\n  let {\n    ex\n  } = props;\n  const {\n    p\n  } = props;\n  const {\n    tag\n  } = props;\n  const {\n    seTags,\n    setSeTags\n  } = ex;\n\n  const getCls = base => {\n    return p.getCls('3u6oNHI-' + base);\n  }; // create state \n\n\n  const [se, setSe] = useState(false);\n\n  const isChecked = () => {\n    const temp = seTags.filter(d => {\n      return d === tag._id.toString();\n    });\n    console.log(temp);\n    return temp.length > 0;\n  };\n\n  const toggle = () => {\n    if (isChecked()) {\n      // remove item from arr\n      const t = seTags.filter(d => {\n        return d !== tag._id;\n      });\n      setSeTags(t);\n      setSe(false);\n    } else {\n      // add item to arr\n      const t = seTags;\n      t.push(tag._id);\n      setSeTags(t);\n      setSe(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: getCls('container'),\n    onClick: toggle,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: getCls('name'),\n      children: tag.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), se && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: getCls('sel-icon'),\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-check\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Item, \"RGDtSXyDJOindQ8TWel+N7PBddA=\");\n\n_c = Item;\nexport default Item;\n\nvar _c;\n\n$RefreshReg$(_c, \"Item\");","map":{"version":3,"sources":["F:/React/tree-mysql/src/Components/branches/new/tags/Item.js"],"names":["React","useState","useEffect","Item","props","ex","p","tag","seTags","setSeTags","getCls","base","se","setSe","isChecked","temp","filter","d","_id","toString","console","log","length","toggle","t","push","name"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;AACA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AACjB;AACA,MAAI;AAACC,IAAAA;AAAD,MAAOD,KAAX;AACA,QAAM;AAACE,IAAAA;AAAD,MAAMF,KAAZ;AACA,QAAM;AAACG,IAAAA;AAAD,MAAQH,KAAd;AACA,QAAM;AAACI,IAAAA,MAAD;AAASC,IAAAA;AAAT,MAAsBJ,EAA5B;;AACA,QAAMK,MAAM,GAAIC,IAAD,IAAU;AAAE,WAAOL,CAAC,CAACI,MAAF,CAAS,aAAaC,IAAtB,CAAP;AAAoC,GAA/D,CANiB,CAQjB;;;AACA,QAAM,CAACC,EAAD,EAAKC,KAAL,IAAcZ,QAAQ,CAAC,KAAD,CAA5B;;AAGA,QAAMa,SAAS,GAAG,MAAM;AACpB,UAAMC,IAAI,GAAGP,MAAM,CAACQ,MAAP,CAAeC,CAAD,IAAO;AAC9B,aAAOA,CAAC,KAAKV,GAAG,CAACW,GAAJ,CAAQC,QAAR,EAAb;AACH,KAFY,CAAb;AAGAC,IAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AACA,WAAOA,IAAI,CAACO,MAAL,GAAc,CAArB;AACH,GAND;;AAQA,QAAMC,MAAM,GAAG,MAAM;AACjB,QAAGT,SAAS,EAAZ,EAAe;AACX;AACA,YAAMU,CAAC,GAAGhB,MAAM,CAACQ,MAAP,CAAeC,CAAD,IAAO;AAC3B,eAAOA,CAAC,KAAKV,GAAG,CAACW,GAAjB;AACH,OAFS,CAAV;AAGAT,MAAAA,SAAS,CAACe,CAAD,CAAT;AACAX,MAAAA,KAAK,CAAC,KAAD,CAAL;AAEH,KARD,MAQK;AACD;AACA,YAAMW,CAAC,GAAGhB,MAAV;AACAgB,MAAAA,CAAC,CAACC,IAAF,CAAOlB,GAAG,CAACW,GAAX;AACAT,MAAAA,SAAS,CAACe,CAAD,CAAT;AACAX,MAAAA,KAAK,CAAC,IAAD,CAAL;AACH;AACJ,GAhBD;;AAkBA,sBACI;AAAK,IAAA,SAAS,EAAEH,MAAM,CAAC,WAAD,CAAtB;AAAqC,IAAA,OAAO,EAAEa,MAA9C;AAAA,4BACI;AAAK,MAAA,SAAS,EAAEb,MAAM,CAAC,MAAD,CAAtB;AAAA,gBACKH,GAAG,CAACmB;AADT;AAAA;AAAA;AAAA;AAAA,YADJ,EAIId,EAAE,iBAAI;AAAK,MAAA,SAAS,EAAEF,MAAM,CAAC,UAAD,CAAtB;AAAA,6BACF;AAAG,QAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADE;AAAA;AAAA;AAAA;AAAA,YAJV;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;;GAhDQP,I;;KAAAA,I;AAkDT,eAAeA,IAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\nfunction Item(props) {\n    // extract state\n    let {ex} = props\n    const {p} = props\n    const {tag} = props\n    const {seTags, setSeTags} = ex\n    const getCls = (base) => { return p.getCls('3u6oNHI-' + base) }\n\n    // create state \n    const [se, setSe] = useState(false)\n\n\n    const isChecked = () => {\n        const temp = seTags.filter((d) => {\n            return d === tag._id.toString()\n        })\n        console.log(temp);\n        return temp.length > 0\n    }\n\n    const toggle = () => {\n        if(isChecked()){\n            // remove item from arr\n            const t = seTags.filter((d) => {\n                return d !== tag._id\n            })\n            setSeTags(t)\n            setSe(false)\n\n        }else{\n            // add item to arr\n            const t = seTags\n            t.push(tag._id)\n            setSeTags(t)\n            setSe(true)\n        }\n    }\n\n    return (\n        <div className={getCls('container')} onClick={toggle}>\n            <div className={getCls('name')}>\n                {tag.name}\n            </div>\n           {se && <div className={getCls('sel-icon')}>\n                <i className=\"fas fa-check\"></i>\n            </div>}\n        </div>\n    )\n}\n\nexport default Item\n\n"]},"metadata":{},"sourceType":"module"}