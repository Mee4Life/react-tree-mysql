{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\React\\\\tree-mysql\\\\src\\\\Components\\\\branches\\\\new\\\\New.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './new.css';\nimport BranchLang from './BranchLang';\nimport Group from './groups/Group';\nimport Person from './persons/Person';\nimport Tag from './tags/Tag';\nimport Input1 from '../../Inputs/input1';\nimport { tokenPost } from '../../../utils/functions';\n\nfunction New(props) {\n  _s();\n\n  const {\n    p\n  } = props;\n\n  let getCls = base => {\n    return p.getCls('new-section-' + base);\n  };\n\n  const [newBranchPending, setNewBranchPending] = useState(false);\n  const [branchName, setBranchName] = useState('');\n  const [branchType, setBranchType] = useState('text');\n  const [linkName, setLinkName] = useState('');\n  const [lang, setLang] = useState('ar');\n  const [pinned, setPinned] = useState(0);\n  const [pos, setPos] = useState(0);\n  const [openedMenu, setOpenedMenu] = useState(false);\n  const [seGroups, setSeGroups] = useState([]);\n  const [sePersons, setSePersons] = useState([]);\n  const [seTags, setSeTags] = useState([]);\n  const [expandNew, setExpandNew] = useState(false);\n  const [soundName, setSoundName] = useState('');\n  let {\n    location: BranchLocation,\n    isDark,\n    apiBase,\n    setUpToDate\n  } = props;\n  if (!BranchLocation) BranchLocation = '';\n  let ex = {\n    seGroups,\n    setSeGroups,\n    sePersons,\n    setSePersons,\n    seTags,\n    setSeTags\n  };\n\n  const setDir = () => {\n    if (lang === 'ar') return 'rtl';else return 'ltr';\n  };\n\n  const setTextAlign = () => {\n    if (lang === 'ar') return 'right';else return 'left';\n  };\n\n  const cleanForm = () => {\n    const inp = document.getElementById('branchName');\n    inp.innerHTML = '';\n  };\n\n  const submitClick = () => {\n    setNewBranchPending(true);\n    let url = p.apiBase2 + '/branches';\n    const data = {\n      name: branchName,\n      type: branchType,\n      parentID: BranchLocation,\n      lang: lang,\n      pinned: pinned,\n      positive: pos\n    };\n    if (BranchLocation.length <= 0) data.parentID = 0; // check link type to append link name to the extra\n\n    if (branchType === 'link') {\n      data['extra'] = {};\n      data.extra['name'] = linkName;\n    } // check if type Song is added to add Name \n\n\n    if (branchType === 'sound') {\n      data['extra'] = {};\n      data.extra['soundName'] = soundName;\n    }\n\n    tokenPost(url, data, p.token).then(res => {\n      // toggle branch tags\n      seTags.forEach((tag, index) => {\n        url = p.apiBase2 + '/branches/toggle-tag';\n        tokenPost(url, {\n          tagID: tag,\n          branchID: res.id\n        }, p.token).then(e => console.log(e)).catch(r => {\n          console.log(r);\n        });\n\n        if (seTags.length - 1 === index) {\n          // toggel branch people\n          sePersons.forEach((person, peopleIndex) => {\n            url = p.apiBase2 + '/branches/toggle-person';\n            tokenPost(url, {\n              personID: person,\n              branchID: res.id\n            }, p.token).then(e => console.log(e)).catch(r => {\n              console.log(r);\n            });\n\n            if (sePersons.length - 1 === peopleIndex) {\n              // toggle branch groups\n              seGroups.forEach((group, groupsIndex) => {\n                url = p.apiBase2 + '/branches/toggle-group';\n                tokenPost(url, {\n                  groupID: group,\n                  branchID: res.id\n                }, p.token).then(e => console.log(e)).catch(r => {\n                  console.log(r);\n                });\n\n                if (seGroups.length - 1 === groupsIndex) {\n                  // fetch branches in the location : \n                  console.log(BranchLocation);\n                  console.log(typeof BranchLocation);\n                }\n              });\n            }\n          });\n        }\n      }); // fetch new branches . \n      // let url\n      // BranchLocation.length > 0 ? url = apiBase + '/branch?id=' + BranchLocation : url = apiBase + '/branch'\n      // fetch(url).then(d => {\n      //     return d.json()\n      // }).then(e => {\n      //     if (BranchLocation.length > 0)\n      //         setUpToDate(e)\n      //     else {\n      //         // extract root branches : \n      //         // extract root branches : \n      //         const rootBranches = e.filter((b) => {\n      //             return b.origin == null\n      //         })\n      //         setUpToDate(rootBranches)\n      //     }\n      // })\n    });\n    cleanForm();\n  };\n\n  const handleNameChange = e => {\n    setBranchName(e.target.innerText);\n  };\n\n  const branchTypeChange = e => {\n    setBranchType(e.target.value);\n  };\n\n  const getSelectBranchType = () => {\n    return /*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"select-branch-type\",\n      name: \"type\",\n      onChange: e => {\n        branchTypeChange(e);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"text\",\n        children: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"image\",\n        children: \"image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"sound\",\n        children: \"sound\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"video\",\n        children: \"video\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"link\",\n        children: \"Link\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"youtube\",\n        children: \"youtube\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"gist\",\n        children: \"gist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this);\n  };\n\n  const getTextInput = title => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }, this), title === \"Branch\" && expandNew && /*#__PURE__*/_jsxDEV(BranchLang, {\n        setLang: setLang,\n        branchType: branchType,\n        lang: lang\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 53\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        contentEditable: \"true\",\n        id: \"branchName\",\n        className: getCls('input-name'),\n        onInput: e => handleNameChange(e),\n        style: {\n          direction: setDir(),\n          textAlign: setTextAlign()\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: submitClick,\n        className: `save-branch-btn ${isDark ? \"save-branch-dark\" : \"save-branch-light\"}`,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }, this);\n  };\n\n  const getAudioInput = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Song\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input1, {\n        type: \"text\",\n        placeholder: \"Song Link\",\n        value: branchName,\n        onChange: e => setBranchName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input1, {\n        placeholder: \"Song Name\",\n        type: \"text\",\n        value: soundName,\n        onChange: e => {\n          setSoundName(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: submitClick,\n        className: `save-branch-btn ${isDark ? \"save-branch-dark\" : \"save-branch-light\"}`,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }, this);\n  };\n\n  const getImageForm = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-branch-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        contentEditable: \"true\",\n        id: \"branchName\",\n        className: getCls('input-name'),\n        onInput: e => handleNameChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: submitClick,\n        className: `save-branch-btn ${isDark ? \"save-branch-dark\" : \"save-branch-light\"}`,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }, this);\n  };\n\n  const handleLinkChange = e => {\n    setBranchName(e.target.innerText);\n  };\n\n  const handleLinkNameChange = e => {\n    setLinkName(e.target.innerText);\n  };\n\n  const getLinkForm = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-branch-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Link\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        contentEditable: \"true\",\n        className: getCls('input-name'),\n        onInput: e => handleLinkChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        contentEditable: \"true\",\n        className: getCls('input-name'),\n        onInput: e => handleLinkNameChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: submitClick,\n        className: `save-branch-btn ${isDark ? \"save-branch-dark\" : \"save-branch-light\"}`,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 13\n    }, this);\n  };\n\n  const getSpinner = e => {\n    return /*#__PURE__*/_jsxDEV(\"i\", {\n      className: \"fas fa-spinner spinner save-branch-spinner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 13\n    }, this);\n  };\n\n  const toggleNew = () => {\n    setOpenedMenu(!openedMenu);\n  };\n\n  const getPinPosValue = oldValue => {\n    if (oldValue == 1) return 0;else return 1;\n  };\n\n  const getPinnedPositive = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: getCls('container'),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: getCls('pinned'),\n        onClick: () => {\n          setPinned(getPinPosValue(pinned));\n        },\n        children: [pinned == 0 && /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-ribbon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 37\n        }, this), pinned == 1 && /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-ribbon\",\n          style: {\n            color: 'green'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: getCls('pos'),\n        onClick: () => {\n          setPos(getPinPosValue(pinned));\n        },\n        children: [pos == 0 && /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"far fa-minus-square\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 34\n        }, this), pos == 1 && /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"far fa-plus-square\",\n          style: {\n            color: 'green'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 13\n    }, this);\n  };\n\n  const toggleExpandNew = () => {\n    setExpandNew(!expandNew);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: getCls('W5DlnFPm77'),\n    children: p.navSts.isVisibleNav && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: p.getCls('new-section'),\n      children: [openedMenu && /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: toggleNew,\n        className: getCls('closeNewIconContainer'),\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-times-circle closeNewIcon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 28\n      }, this), !openedMenu && /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: toggleNew,\n        className: getCls('NewIconContainer'),\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-plus-circle addNewIcon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 36\n      }, this), openedMenu && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-branch-form\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `form-container ${isDark ? \"dark-form-container\" : \"light-form-container\"}`,\n          children: [!newBranchPending && expandNew && getSelectBranchType(), !newBranchPending && branchType === 'text' && getTextInput('Branch'), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: getCls('wN9ogkd4R'),\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: toggleExpandNew,\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"far fa-caret-square-down\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 57\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 25\n            }, this), expandNew && /*#__PURE__*/_jsxDEV(Group, {\n              ex: ex,\n              p: p\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 40\n            }, this), expandNew && /*#__PURE__*/_jsxDEV(Person, {\n              ex: ex,\n              p: p\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 39\n            }, this), expandNew && /*#__PURE__*/_jsxDEV(Tag, {\n              ex: ex,\n              p: p\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 39\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 21\n          }, this), expandNew && getPinnedPositive(), !newBranchPending && branchType === 'image' && getImageForm(), !newBranchPending && branchType === 'link' && getLinkForm(), !newBranchPending && branchType === 'video' && getTextInput('Video'), !newBranchPending && branchType === 'youtube' && getTextInput('YouTube'), !newBranchPending && branchType === 'sound' && getAudioInput(), !newBranchPending && branchType === 'gist' && getTextInput('Gist'), newBranchPending && getSpinner()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 35\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 264,\n    columnNumber: 9\n  }, this);\n}\n\n_s(New, \"5ke0X7mmsB+iiYVMW5I8InkuDwc=\");\n\n_c = New;\nexport default New;\n\nvar _c;\n\n$RefreshReg$(_c, \"New\");","map":{"version":3,"sources":["F:/React/tree-mysql/src/Components/branches/new/New.js"],"names":["React","useState","BranchLang","Group","Person","Tag","Input1","tokenPost","New","props","p","getCls","base","newBranchPending","setNewBranchPending","branchName","setBranchName","branchType","setBranchType","linkName","setLinkName","lang","setLang","pinned","setPinned","pos","setPos","openedMenu","setOpenedMenu","seGroups","setSeGroups","sePersons","setSePersons","seTags","setSeTags","expandNew","setExpandNew","soundName","setSoundName","location","BranchLocation","isDark","apiBase","setUpToDate","ex","setDir","setTextAlign","cleanForm","inp","document","getElementById","innerHTML","submitClick","url","apiBase2","data","name","type","parentID","positive","length","extra","token","then","res","forEach","tag","index","tagID","branchID","id","e","console","log","catch","r","person","peopleIndex","personID","group","groupsIndex","groupID","handleNameChange","target","innerText","branchTypeChange","value","getSelectBranchType","getTextInput","title","direction","textAlign","getAudioInput","getImageForm","handleLinkChange","handleLinkNameChange","getLinkForm","getSpinner","toggleNew","getPinPosValue","oldValue","getPinnedPositive","color","toggleExpandNew","navSts","isVisibleNav"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport './new.css'\nimport BranchLang from './BranchLang'\nimport Group from './groups/Group'\nimport Person from './persons/Person'\nimport Tag from './tags/Tag'\nimport Input1 from '../../Inputs/input1'\nimport {tokenPost} from '../../../utils/functions'\n\n\n\n\n\nfunction New(props) {\n    const { p } = props\n    let getCls = (base) => { return p.getCls('new-section-' + base) }\n    const [newBranchPending, setNewBranchPending] = useState(false)\n    const [branchName, setBranchName] = useState('')\n    const [branchType, setBranchType] = useState('text')\n    const [linkName, setLinkName] = useState('')\n    const [lang, setLang] = useState('ar')\n    const [pinned, setPinned] = useState(0)\n    const [pos, setPos] = useState(0)\n    const [openedMenu, setOpenedMenu] = useState(false)\n    const [seGroups, setSeGroups] = useState([])\n    const [sePersons, setSePersons] = useState([])\n    const [seTags, setSeTags] = useState([])\n    const [expandNew, setExpandNew] = useState(false)\n    const [soundName, setSoundName] = useState('')\n    let { location: BranchLocation, isDark, apiBase, setUpToDate } = props\n    if (!BranchLocation) BranchLocation = ''\n\n    let ex = {\n        seGroups, setSeGroups, sePersons, setSePersons, seTags, setSeTags\n    }\n\n\n    const setDir = () => {\n        if (lang === 'ar') return 'rtl'\n        else return 'ltr'\n    }\n    const setTextAlign = () => {\n        if (lang === 'ar') return 'right'\n        else return 'left'\n    }\n\n    const cleanForm = () => {\n        const inp = document.getElementById('branchName')\n        inp.innerHTML = ''\n    }\n\n    const submitClick = () => {\n        setNewBranchPending(true)\n        let url = p.apiBase2 + '/branches'\n        const data = {\n            name: branchName,\n            type: branchType,\n            parentID: BranchLocation,\n            lang: lang,\n            pinned: pinned,\n            positive: pos\n        }\n\n        if(BranchLocation.length <= 0) data.parentID = 0\n\n        // check link type to append link name to the extra\n        if (branchType === 'link') {\n            data['extra'] = {}\n            data.extra['name'] = linkName\n        }\n\n        // check if type Song is added to add Name \n        if(branchType === 'sound'){\n            data['extra'] = {}\n            data.extra['soundName'] = soundName\n        }\n    \n\n        tokenPost(url, data, p.token).then(res => {\n            // toggle branch tags\n            seTags.forEach((tag, index) => {\n\n                url = p.apiBase2 + '/branches/toggle-tag'\n                tokenPost(url, {tagID: tag, branchID: res.id}, p.token)\n                .then(e => console.log(e))\n                .catch(r => {console.log(r)})\n\n                if(seTags.length-1 === index) {\n                    // toggel branch people\n                    sePersons.forEach((person, peopleIndex) => {\n\n                        url = p.apiBase2 + '/branches/toggle-person'\n                        tokenPost(url, {personID: person, branchID: res.id}, p.token)\n                        .then(e => console.log(e))\n                        .catch(r => {console.log(r)})\n\n                        if(sePersons.length-1 === peopleIndex){\n                            // toggle branch groups\n                            seGroups.forEach((group, groupsIndex) => {\n\n                                url = p.apiBase2 + '/branches/toggle-group'\n                                tokenPost(url, {groupID: group, branchID: res.id}, p.token)\n                                .then(e => console.log(e))\n                                .catch(r => {console.log(r)})\n\n                                if(seGroups.length-1 === groupsIndex) {\n                                    // fetch branches in the location : \n                                    console.log(BranchLocation)\n                                    console.log(typeof(BranchLocation))\n                                }\n                            })\n                        }\n                    })\n                }\n            })\n            \n            \n            \n            \n\n\n            // fetch new branches . \n            // let url\n            // BranchLocation.length > 0 ? url = apiBase + '/branch?id=' + BranchLocation : url = apiBase + '/branch'\n            // fetch(url).then(d => {\n            //     return d.json()\n            // }).then(e => {\n            //     if (BranchLocation.length > 0)\n            //         setUpToDate(e)\n            //     else {\n            //         // extract root branches : \n            //         // extract root branches : \n            //         const rootBranches = e.filter((b) => {\n            //             return b.origin == null\n            //         })\n            //         setUpToDate(rootBranches)\n\n            //     }\n            // })\n\n        })\n\n        cleanForm()\n\n    }\n\n    const handleNameChange = (e) => {\n        setBranchName(e.target.innerText)\n    }\n\n    const branchTypeChange = (e) => {\n        setBranchType(e.target.value)\n    }\n\n\n    const getSelectBranchType = () => {\n        return (\n            <select className=\"select-branch-type\" name=\"type\" onChange={(e) => {\n                branchTypeChange(e)\n            }}>\n                <option value=\"text\">text</option>\n                <option value=\"image\">image</option>\n                <option value=\"sound\">sound</option>\n                <option value=\"video\">video</option>\n                <option value=\"link\">Link</option>\n                <option value=\"youtube\">youtube</option>\n                <option value=\"gist\">gist</option>\n            </select>\n        )\n    }\n\n\n\n    const getTextInput = (title) => {\n        return (\n            <div>\n                <h2>{title}</h2>\n                {title === \"Branch\" && expandNew && <BranchLang setLang={setLang} branchType={branchType} lang={lang} />}\n                <div contentEditable=\"true\" id=\"branchName\" className={getCls('input-name')} onInput={(e) => handleNameChange(e)} style={{ direction: setDir(), textAlign: setTextAlign() }} />\n                <button type=\"submit\" onClick={submitClick} className={`save-branch-btn ${isDark ? \"save-branch-dark\" : \"save-branch-light\"}`}>Save</button>\n            </div>\n        )\n    }\n\n\n    const getAudioInput = () => {\n        return (\n            <div>\n                {/* title */}\n                <h2>Song</h2>\n                {/* link */}\n                <Input1 type=\"text\" placeholder='Song Link' value={branchName} onChange={(e) => setBranchName(e.target.value)} />\n                {/* name */}\n                <Input1 placeholder=\"Song Name\" type=\"text\" value={soundName} onChange={(e)=> {setSoundName(e.target.value)}}/>\n                {/* submit */}\n                <button type=\"submit\" onClick={submitClick} className={`save-branch-btn ${isDark ? \"save-branch-dark\" : \"save-branch-light\"}`}>Save</button>\n            </div>\n        )\n    }\n\n    const getImageForm = () => {\n        return (\n            <div className=\"new-branch-form\">\n                <h2>Image</h2>\n                <div contentEditable=\"true\" id=\"branchName\" className={getCls('input-name')} onInput={(e) => handleNameChange(e)} />\n                <button type=\"submit\" onClick={submitClick} className={`save-branch-btn ${isDark ? \"save-branch-dark\" : \"save-branch-light\"}`}>Save</button>\n            </div>\n        )\n    }\n    const handleLinkChange = (e) => {\n        setBranchName(e.target.innerText)\n    }\n    const handleLinkNameChange = (e) => {\n        setLinkName(e.target.innerText)\n    }\n    const getLinkForm = () => {\n        return (\n            <div className=\"new-branch-form\">\n                <h2>Link</h2>\n                <div contentEditable=\"true\" className={getCls('input-name')} onInput={(e) => handleLinkChange(e)}></div>\n                <div contentEditable=\"true\" className={getCls('input-name')} onInput={(e) => handleLinkNameChange(e)}></div>\n                <button type=\"submit\" onClick={submitClick} className={`save-branch-btn ${isDark ? \"save-branch-dark\" : \"save-branch-light\"}`}>Save</button>\n            </div>\n        )\n    }\n\n    const getSpinner = (e) => {\n        return (\n            <i className=\"fas fa-spinner spinner save-branch-spinner\"></i>\n        )\n    }\n\n    const toggleNew = () => {\n        setOpenedMenu(!openedMenu)\n    }\n\n    const getPinPosValue = (oldValue) => {\n        if(oldValue == 1) return 0\n        else return 1\n    }\n\n\n    const getPinnedPositive = () => {\n\n        return (\n            <div className={getCls('container')}>\n                <div className={getCls('pinned')} onClick={() => { setPinned(getPinPosValue(pinned)) }}>\n                    {pinned == 0 && <i className=\"fas fa-ribbon\"></i>}\n                    {pinned == 1 && <i className=\"fas fa-ribbon\" style={{ color: 'green' }}></i>}\n                </div>\n                <div className={getCls('pos')} onClick={() => { setPos(getPinPosValue(pinned)) }}>\n                    {pos == 0 && <i className=\"far fa-minus-square\"></i>}\n                    {pos == 1 && <i className=\"far fa-plus-square\" style={{ color: 'green' }}></i>}\n                </div>\n            </div>\n        )\n    }\n\n\n    const toggleExpandNew = () => {\n        setExpandNew(!expandNew)\n    }\n    return (\n        <div className={getCls('W5DlnFPm77')}>\n        {p.navSts.isVisibleNav && <div className={p.getCls('new-section')}>\n            {openedMenu && <div onClick={toggleNew} className={getCls('closeNewIconContainer')}>\n                <i className=\"fas fa-times-circle closeNewIcon\"></i>\n            </div>}{!openedMenu && <div onClick={toggleNew} className={getCls('NewIconContainer')}>\n                <i className=\"fas fa-plus-circle addNewIcon\"></i>\n            </div>}\n            {openedMenu && <div className=\"new-branch-form\">\n                <div className={`form-container ${isDark ? \"dark-form-container\" : \"light-form-container\"}`}>\n                    \n                    {!newBranchPending && expandNew && getSelectBranchType()}\n\n\n                    {!newBranchPending && branchType === 'text' && getTextInput('Branch')}\n\n\n                    <div className={getCls('wN9ogkd4R')} >\n                        <span onClick={toggleExpandNew}><i className=\"far fa-caret-square-down\"></i></span>\n                        {expandNew &&  <Group ex={ex} p={p} />}\n                        {expandNew && <Person ex={ex} p={p} />}\n                        {expandNew && <Tag ex={ex} p={p} />}\n                    </div>\n                    {expandNew && getPinnedPositive()}\n                    \n                    {!newBranchPending && branchType === 'image' && getImageForm()}\n                    {!newBranchPending && branchType === 'link' && getLinkForm()}\n                    {!newBranchPending && branchType === 'video' && getTextInput('Video')}\n                    {!newBranchPending && branchType === 'youtube' && getTextInput('YouTube')}\n                    {!newBranchPending && branchType === 'sound' && getAudioInput()}\n                    {!newBranchPending && branchType === 'gist' && getTextInput('Gist')}\n                    {newBranchPending && getSpinner()}\n                </div>\n            </div>}\n        </div>}\n        </div>\n    )\n}\n\nexport default New\n"]},"metadata":{},"sourceType":"module"}