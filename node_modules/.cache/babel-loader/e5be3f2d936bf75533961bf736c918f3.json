{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\React\\\\tree-react-mysql\\\\src\\\\Components\\\\branches\\\\FlashCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\n\nfunction FlashCard(props) {\n  _s();\n\n  const {\n    p,\n    ex\n  } = props;\n  const {\n    data,\n    setIsAction\n  } = props.ex; // branches array\n\n  let els = []; // current position in the array\n\n  const [position, setPosition] = useState(0);\n\n  const getElements = () => {\n    // check if the data has array \n    if (data.children.length <= 0) return;\n    els = data.children;\n  };\n\n  const getCls = base => {\n    return p.getCls('fc-' + base);\n  };\n\n  const exit = () => {\n    setIsAction(false);\n  };\n\n  const exitBtn = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: getCls('action-cont') + ' fs-close-icon',\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: getCls('exit') + ' far fa-times-circle',\n        onClick: () => {\n          exit();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this);\n  };\n\n  const changePosition = delta => {\n    let p1;\n    p1 = delta + position;\n    if (position === els.length - 1) p1 = 0;\n    if (position === 0) if (delta < 0) p1 = els.length - 1;\n    setPosition(p1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: getCls('container'),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: getCls('actions'),\n      children: exitBtn()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), getElements(), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: getCls('flash-section'),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => {\n          changePosition(-1);\n        },\n        className: getCls('up-btn') + \" dir-controller\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-arrow-alt-circle-up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: getCls('name'),\n        style: {\n          fontSize: p.fontSize\n        },\n        children: els[position].name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => {\n          changePosition(1);\n        },\n        className: getCls('down-btn') + \" dir-controller\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-arrow-alt-circle-down\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FlashCard, \"5I1s7m+XDY739hBJnlWri2WSHb4=\");\n\n_c = FlashCard;\nexport default FlashCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"FlashCard\");","map":{"version":3,"sources":["F:/React/tree-react-mysql/src/Components/branches/FlashCard.js"],"names":["React","useState","FlashCard","props","p","ex","data","setIsAction","els","position","setPosition","getElements","children","length","getCls","base","exit","exitBtn","changePosition","delta","p1","fontSize","name"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n\nfunction FlashCard(props) {\n\n\n    const { p, ex } = props\n    const { data, setIsAction } = props.ex\n    // branches array\n    let els = []\n    // current position in the array\n    const [position, setPosition] = useState(0)\n\n    const getElements = () => {\n        // check if the data has array \n        if (data.children.length <= 0) return\n        els = data.children\n    }\n\n    const getCls = (base) => {\n        return p.getCls('fc-' + base)\n    }\n\n    const exit = () => {\n        setIsAction(false)\n    }\n\n    const exitBtn = () => {\n        return (\n            <div className={getCls('action-cont') + ' fs-close-icon'}>\n                <i className={getCls('exit') + ' far fa-times-circle'}\n                    onClick={() => { exit() }}></i>\n            </div>\n        )\n    }\n\n    const changePosition= (delta)=> {\n        let p1\n        p1 = delta + position\n        if(position === els.length -1 ) p1 = 0\n        if(position === 0 ) if(delta < 0) p1 = els.length - 1\n        setPosition(p1)\n        \n\n    }\n\n    \n\n    return (\n        <div className={getCls('container')}>\n            <div className={getCls('actions')}>\n                {exitBtn()}\n            </div>\n            {getElements()}\n            <div className={getCls('flash-section')}>\n                <div onClick={() => {changePosition(-1)}} className={getCls('up-btn') + \" dir-controller\"}>\n                    <i className=\"fas fa-arrow-alt-circle-up\"></i>\n                </div>\n\n                <div className={getCls('name')} style={{ fontSize: p.fontSize }}>\n                    {els[position].name}\n                </div>\n                <div onClick={() => {changePosition(1)}} className={getCls('down-btn') + \" dir-controller\"}>\n                    <i className=\"fas fa-arrow-alt-circle-down\"></i>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default FlashCard\n"]},"metadata":{},"sourceType":"module"}