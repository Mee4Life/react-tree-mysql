{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\React\\\\tree-mysql\\\\src\\\\pages\\\\people\\\\PeopleManager.js\",\n    _s = $RefreshSig$();\n\n/* \npage \nlist\nitem\ninput\nremove \nsave \n\n\n*/\nimport React, { useEffect, useState } from 'react';\nimport { getSpinner, tokenGet } from '../../utils/functions';\nimport GroupItem from './GroupItem';\nimport './people.css';\nimport Form from './Form';\n\nfunction PeopleView(props) {\n  _s();\n\n  const {\n    p\n  } = props;\n\n  const getCls = base => {\n    return p.getCls('uRM-' + base);\n  }; // cerate page state > \n\n\n  const [rGroups, setRGroups] = useState([]);\n  const [filter, SetFilter] = useState(null);\n  const [filteredPeople, setFilteredPeople] = useState([]);\n  const [isPending, setIsPending] = useState(true);\n  useEffect(() => {\n    tokenGet(p.apiBase2 + '/people', {\n      Authorization: p.token\n    }).then(d => {\n      setRGroups(d);\n      setFilteredPeople(d);\n      setIsPending(false);\n    });\n  }, []);\n  let ex = {\n    rGroups,\n    setRGroups,\n    filter,\n    SetFilter,\n    filteredPeople,\n    setFilteredPeople\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: getCls('wrapper'),\n    children: [!isPending && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: getCls('wrapper1'),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: getCls('title'),\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"People\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: getCls('form'),\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          p: p,\n          ex: ex\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: getCls('CJ'),\n        children: filteredPeople.map(group => /*#__PURE__*/_jsxDEV(GroupItem, {\n          p: p,\n          group: group\n        }, group.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 28\n    }, this), isPending && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: getCls('vi6c'),\n      children: getSpinner()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PeopleView, \"mjFphHbA/3MXf194mRU+pMYObpA=\");\n\n_c = PeopleView;\nexport default PeopleView;\n\nvar _c;\n\n$RefreshReg$(_c, \"PeopleView\");","map":{"version":3,"sources":["F:/React/tree-mysql/src/pages/people/PeopleManager.js"],"names":["React","useEffect","useState","getSpinner","tokenGet","GroupItem","Form","PeopleView","props","p","getCls","base","rGroups","setRGroups","filter","SetFilter","filteredPeople","setFilteredPeople","isPending","setIsPending","apiBase2","Authorization","token","then","d","ex","map","group","id"],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,uBAArC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAO,cAAP;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAIA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACvB,QAAM;AAAEC,IAAAA;AAAF,MAAQD,KAAd;;AACA,QAAME,MAAM,GAAIC,IAAD,IAAU;AAAE,WAAOF,CAAC,CAACC,MAAF,CAAS,SAASC,IAAlB,CAAP;AAAgC,GAA3D,CAFuB,CAKvB;;;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACY,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACc,cAAD,EAAiBC,iBAAjB,IAAsCf,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACgB,SAAD,EAAYC,YAAZ,IAA4BjB,QAAQ,CAAC,IAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,QAAQ,CAACK,CAAC,CAACW,QAAF,GAAa,SAAd,EAAyB;AAAEC,MAAAA,aAAa,EAAEZ,CAAC,CAACa;AAAnB,KAAzB,CAAR,CAA6DC,IAA7D,CAAmEC,CAAD,IAAO;AACrEX,MAAAA,UAAU,CAACW,CAAD,CAAV;AACAP,MAAAA,iBAAiB,CAACO,CAAD,CAAjB;AACAL,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,KAJD;AAKH,GANQ,EAMN,EANM,CAAT;AAQA,MAAIM,EAAE,GAAG;AACLb,IAAAA,OADK;AACIC,IAAAA,UADJ;AAELC,IAAAA,MAFK;AAEGC,IAAAA,SAFH;AAGLC,IAAAA,cAHK;AAGWC,IAAAA;AAHX,GAAT;AAMA,sBACI;AAAK,IAAA,SAAS,EAAEP,MAAM,CAAC,SAAD,CAAtB;AAAA,eACK,CAACQ,SAAD,iBAAc;AAAK,MAAA,SAAS,EAAER,MAAM,CAAC,UAAD,CAAtB;AAAA,8BAEX;AAAK,QAAA,SAAS,EAAEA,MAAM,CAAC,OAAD,CAAtB;AAAA,+BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFW,eAMX;AAAK,QAAA,SAAS,EAAEA,MAAM,CAAC,MAAD,CAAtB;AAAA,+BACI,QAAC,IAAD;AAAM,UAAA,CAAC,EAAED,CAAT;AAAY,UAAA,EAAE,EAAEgB;AAAhB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cANW,eAUX;AAAK,QAAA,SAAS,EAAEf,MAAM,CAAC,IAAD,CAAtB;AAAA,kBACKM,cAAc,CAACU,GAAf,CAAmBC,KAAK,iBACrB,QAAC,SAAD;AAA0B,UAAA,CAAC,EAAElB,CAA7B;AAAgC,UAAA,KAAK,EAAEkB;AAAvC,WAAgBA,KAAK,CAACC,EAAtB;AAAA;AAAA;AAAA;AAAA,gBADH;AADL;AAAA;AAAA;AAAA;AAAA,cAVW;AAAA;AAAA;AAAA;AAAA;AAAA,YADnB,EAiBKV,SAAS,iBACN;AAAK,MAAA,SAAS,EAAER,MAAM,CAAC,MAAD,CAAtB;AAAA,gBACKP,UAAU;AADf;AAAA;AAAA;AAAA;AAAA,YAlBR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH;;GAnDQI,U;;KAAAA,U;AAqDT,eAAeA,UAAf","sourcesContent":["/* \npage \nlist\nitem\ninput\nremove \nsave \n\n\n*/\n\nimport React, { useEffect, useState } from 'react'\nimport { getSpinner, tokenGet } from '../../utils/functions'\nimport GroupItem from './GroupItem'\nimport './people.css'\nimport Form from './Form'\n\n\n\nfunction PeopleView(props) {\n    const { p } = props\n    const getCls = (base) => { return p.getCls('uRM-' + base) }\n\n\n    // cerate page state > \n    const [rGroups, setRGroups] = useState([])\n    const [filter, SetFilter] = useState(null)\n    const [filteredPeople, setFilteredPeople] = useState([])\n    const [isPending, setIsPending] = useState(true)\n\n    useEffect(() => {\n        tokenGet(p.apiBase2 + '/people', { Authorization: p.token }).then((d) => {\n            setRGroups(d)\n            setFilteredPeople(d)\n            setIsPending(false)\n        })\n    }, [])\n\n    let ex = {\n        rGroups, setRGroups,\n        filter, SetFilter,\n        filteredPeople, setFilteredPeople\n    }\n\n    return (\n        <div className={getCls('wrapper')}>\n            {!isPending && <div className={getCls('wrapper1')}>\n                {/* Title Section  */}\n                <div className={getCls('title')}>\n                    <h2>People</h2>\n                </div>\n                {/* input form */}\n                <div className={getCls('form')}>\n                    <Form p={p} ex={ex} />\n                </div>\n                {/* list */}\n                <div className={getCls('CJ')}>\n                    {filteredPeople.map(group => (\n                        <GroupItem key={group.id} p={p} group={group} />\n                    ))}\n                </div>\n            </div>}\n            {isPending &&\n                <div className={getCls('vi6c')}>\n                    {getSpinner()}\n                </div>\n            }\n        </div>\n\n    )\n}\n\nexport default PeopleView\n"]},"metadata":{},"sourceType":"module"}