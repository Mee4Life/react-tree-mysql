{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\React\\\\tree-react-mysql\\\\src\\\\pages\\\\BranchDtl.js\",\n    _s = $RefreshSig$();\n\n/* \nanother way to show branches.  \n*/\nimport { useParams, Link } from 'react-router-dom';\nimport React, { useEffect, useState } from 'react';\nimport getReqHeader from '../utils/getReqHeader';\nimport BranchList from '../Components/branchDtl/BranchesList';\n\nfunction BranchDtl(props) {\n  _s();\n\n  const {\n    p\n  } = props;\n  let {\n    id\n  } = useParams();\n  const [branches, setBranches] = useState(null);\n  const [branch, setBranch] = useState(null);\n  if (props.id) id = props.id; // export \n\n  const data = {\n    p,\n    branches\n  }; // functions\n\n  const getCls = base => {\n    return p.getCls('br0' + base);\n  }; // connection\n\n\n  useEffect(() => {\n    getReqHeader(p.apiBase + '/branch').then(d => {\n      // set branches source\n      setBranches(d); // set target branch\n\n      const b = d.find(e => {\n        return e._id.toString() === id;\n      });\n      setBranch(b);\n    });\n  }, []);\n  /* \n  branch name \n  branch children \n  branch children children children\n  */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: getCls('2'),\n    style: {\n      fontSize: p.fontSize\n    },\n    children: [branch && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: getCls('ch-co'),\n        children: /*#__PURE__*/_jsxDEV(BranchList, {\n          data: data,\n          branch: branch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this), !branch && /*#__PURE__*/_jsxDEV(\"i\", {\n      className: \"fas fa-spinner spinner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n\n_s(BranchDtl, \"+pCGJlTBL4eYoxmTcCBkkMasgMc=\", false, function () {\n  return [useParams];\n});\n\n_c = BranchDtl;\nexport default BranchDtl;\n\nvar _c;\n\n$RefreshReg$(_c, \"BranchDtl\");","map":{"version":3,"sources":["F:/React/tree-react-mysql/src/pages/BranchDtl.js"],"names":["useParams","Link","React","useEffect","useState","getReqHeader","BranchList","BranchDtl","props","p","id","branches","setBranches","branch","setBranch","data","getCls","base","apiBase","then","d","b","find","e","_id","toString","fontSize"],"mappings":";;;;;AAAA;AACA;AACA;AACA,SAASA,SAAT,EAAoBC,IAApB,QAAgC,kBAAhC;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,UAAP,MAAuB,sCAAvB;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACtB,QAAM;AAAEC,IAAAA;AAAF,MAAQD,KAAd;AACA,MAAI;AAAEE,IAAAA;AAAF,MAASV,SAAS,EAAtB;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,IAAD,CAApC;AACA,MAAGI,KAAK,CAACE,EAAT,EAAaA,EAAE,GAAGF,KAAK,CAACE,EAAX,CALS,CAMtB;;AACA,QAAMK,IAAI,GAAG;AACTN,IAAAA,CADS;AACNE,IAAAA;AADM,GAAb,CAPsB,CAWtB;;AACA,QAAMK,MAAM,GAAIC,IAAD,IAAU;AACrB,WAAOR,CAAC,CAACO,MAAF,CAAS,QAAQC,IAAjB,CAAP;AACH,GAFD,CAZsB,CAgBtB;;;AACAd,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,YAAY,CAACI,CAAC,CAACS,OAAF,GAAY,SAAb,CAAZ,CACKC,IADL,CACWC,CAAD,IAAO;AACT;AACAR,MAAAA,WAAW,CAACQ,CAAD,CAAX,CAFS,CAGT;;AACA,YAAMC,CAAC,GAAGD,CAAC,CAACE,IAAF,CAAQC,CAAD,IAAO;AACpB,eAAOA,CAAC,CAACC,GAAF,CAAMC,QAAN,OAAqBf,EAA5B;AACH,OAFS,CAAV;AAGAI,MAAAA,SAAS,CAACO,CAAD,CAAT;AACH,KATL;AAUH,GAXQ,EAWN,EAXM,CAAT;AAcA;AACJ;AACA;AACA;AACA;;AAGI,sBACI;AAAK,IAAA,SAAS,EAAEL,MAAM,CAAC,GAAD,CAAtB;AAA6B,IAAA,KAAK,EAAE;AAACU,MAAAA,QAAQ,EAAEjB,CAAC,CAACiB;AAAb,KAApC;AAAA,eAGKb,MAAM,iBACH;AAAK,MAAA,SAAS,EAAC,EAAf;AAAA,6BAEI;AAAK,QAAA,SAAS,EAAEG,MAAM,CAAC,OAAD,CAAtB;AAAA,+BACI,QAAC,UAAD;AAAY,UAAA,IAAI,EAAED,IAAlB;AAAwB,UAAA,MAAM,EAAEF;AAAhC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YAJR,EAWM,CAACA,MAAD,iBAAW;AAAG,MAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAXjB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH;;GAxDQN,S;UAEQP,S;;;KAFRO,S;AAiET,eAAeA,SAAf","sourcesContent":["/* \nanother way to show branches.  \n*/\nimport { useParams, Link } from 'react-router-dom'\nimport React, { useEffect, useState } from 'react'\nimport getReqHeader from '../utils/getReqHeader'\nimport BranchList from '../Components/branchDtl/BranchesList'\n\nfunction BranchDtl(props) {\n    const { p } = props\n    let { id } = useParams()\n    const [branches, setBranches] = useState(null)\n    const [branch, setBranch] = useState(null)\n    if(props.id) id = props.id\n    // export \n    const data = {\n        p, branches\n    }\n\n    // functions\n    const getCls = (base) => {\n        return p.getCls('br0' + base)\n    }\n\n    // connection\n    useEffect(() => {\n        getReqHeader(p.apiBase + '/branch')\n            .then((d) => {\n                // set branches source\n                setBranches(d)\n                // set target branch\n                const b = d.find((e) => {\n                    return e._id.toString() === id\n                })\n                setBranch(b)\n            })\n    }, [])\n\n\n    /* \n   branch name \n   branch children \n   branch children children children\n   */\n\n\n    return (\n        <div className={getCls('2')} style={{fontSize: p.fontSize}}>\n\n            {/* branch container */}\n            {branch &&\n                <div className=\"\">\n                    {/* // branch children.  */}\n                    <div className={getCls('ch-co')} >\n                        <BranchList data={data} branch={branch} />\n                    </div>\n                </div>\n            }\n            { !branch && <i className=\"fas fa-spinner spinner\"></i>}\n\n        </div>\n\n\n    )\n}\n\n\n\n\n\n\n\n\nexport default BranchDtl\n"]},"metadata":{},"sourceType":"module"}