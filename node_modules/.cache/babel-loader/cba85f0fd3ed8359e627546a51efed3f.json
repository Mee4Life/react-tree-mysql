{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\React\\\\tree-mysql\\\\src\\\\Components\\\\branches\\\\single\\\\Single.js\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect, useState } from 'react';\nimport ReactEmbedGist from 'react-embed-gist';\nimport ReactAudioPlayer from 'react-audio-player';\nimport { Player } from 'video-react';\nimport AudioPlayer from 'react-h5-audio-player';\nimport 'react-h5-audio-player/lib/styles.css';\nimport Input1 from '../../Inputs/input1';\nimport { Link } from 'react-router-dom';\nimport './single.css';\nimport { tokenGet, tokenPatch, tokenPost } from '../../../utils/functions';\n\nfunction Single(props) {\n  _s();\n\n  const {\n    branch,\n    isDark,\n    apiBase,\n    location,\n    setData,\n    setEdit,\n    setBranch,\n    selectedBranches,\n    setSelected,\n    p,\n    counted,\n    ex\n  } = props;\n  const originTitle = ex.branchTitle;\n\n  const getCls = base => {\n    return p.getCls('xEzOkLwAp64vOO2CGf-' + base);\n  };\n\n  const [isDeleting, setDeleting] = useState(false);\n  const [isMoving, setMoving] = useState(false);\n  const [selectedBranch, setIsSelected] = useState(false);\n  const [isExMenu, setIsExMenu] = useState(false);\n  const [isPinned, setIsPinned] = useState(branch.pinned);\n  const [isPositive, setIsPositive] = useState(branch.positive);\n  const [nBranchName, setNBranchName] = useState(branch.name);\n  const [oldBName, setOldBName] = useState(branch.name);\n  const [success, setSuccess] = useState(false);\n  const [error, setError] = useState(false);\n  const [info, setInfo] = useState(false); // selected groups\n\n  const [sGroups, setSGroups] = useState([]); // new group name input\n\n  const [nGroupName, setNGroupName] = useState(''); // result groups \n\n  const [rGroups, setRGroups] = useState([]); // result groups \n\n  const [rTags, setRTags] = useState([]); // isLoading \n\n  const [selGroupLoading, setSelGroupLoading] = useState(true); // selected People\n\n  const [sPeople, setSPeople] = useState([]); // selected tags\n\n  const [sTags, setSTags] = useState([]); // new person name input\n\n  const [nPersonName, setNPersonName] = useState(''); // new tag name input\n\n  const [nTagName, setNTagName] = useState(''); // result people \n\n  const [rPeople, setRPeople] = useState([]); // isLoading \n\n  const [selPeopleLoading, setSelPeopleLoading] = useState(true); // isLoading \n\n  const [selTagsLoading, setSelTagsLoading] = useState(true); // branch has children : \n\n  let hasChild = false;\n  if (branch && branch.children && branch.children.length > 0) hasChild = true;\n  useEffect(() => {\n    // set selected groups\n    tokenGet(p.apiBase2 + '/branches/branch-groups?id=' + branch.id, {\n      Authorization: p.token\n    }).then(d => {\n      console.log('groups', d);\n      setSGroups(d);\n      setSelGroupLoading(false);\n    });\n  }, []);\n  useEffect(() => {\n    tokenGet(p.apiBase2 + '/branches/branch-groups?id=' + branch.id, {\n      Authorization: p.token\n    }).then(d => {\n      console.log('people', d);\n      setSPeople(d);\n      setSelPeopleLoading(false);\n    });\n  }, []);\n  useEffect(() => {\n    tokenGet(p.apiBase2 + '/branches/branch-tags?id=' + branch.id, {\n      Authorization: p.token\n    }).then(d => {\n      console.log('tags', d);\n      setSTags(d);\n      setSelTagsLoading(false);\n    });\n  }, []);\n\n  const branchesListToggleBranchMenu = () => {\n    p.setBranchesListBranchMenu(!p.branchesListIsBranchMenu);\n  };\n\n  const branchDir = () => {\n    if (branch.lang == 'ar') return 'rtl';else return 'ltr';\n  };\n\n  const handleBranchEdit = () => {\n    setEdit(true);\n    setBranch(branch);\n  };\n\n  const handleMoveBranch = dir => {\n    setMoving(true);\n    const url = apiBase + '/branch/move?id=' + branch._id + '&dir=' + dir;\n    console.log(url);\n    tokenGet(url, {\n      token: p.token\n    }).then(d => {\n      console.log(d); // fetch new branches . \n\n      let url;\n\n      if (location.length > 0) {\n        url = url = apiBase + '/branch?id=' + location;\n        tokenGet(url, {\n          token: p.token\n        }).then(d => {\n          setData(d);\n          setMoving(false);\n        });\n      } else {\n        url = url = apiBase + '/branch';\n        tokenGet(url, {\n          token: p.token\n        }).then(e => {\n          // extract root branches : \n          const rootBranches = e.filter(b => {\n            return b.origin == null;\n          });\n          setData(rootBranches);\n          setMoving(false);\n        });\n      }\n    });\n  };\n\n  const handleBranchRemove = () => {\n    setDeleting(true);\n    const url = apiBase + '/branch?id=' + branch._id + '&complete=true';\n    deleteFunc(url).then(e => {\n      return e.json;\n    }).then(e => {\n      // fetch new branches . \n      let url;\n      if (location && location.length) url = apiBase + '/branch?id=' + location;else url = apiBase + '/branch';\n      fetch(url).then(d => {\n        return d.json();\n      }).then(e => {\n        if (location && location.length > 0) setData(e);else {\n          // extract root branches : \n          // extract root branches : \n          const rootBranches = e.filter(b => {\n            return b.origin == null;\n          });\n          setData(rootBranches);\n        }\n      });\n    });\n  };\n\n  const handleSelectedBranch = () => {\n    // update selected branches status\n    // check if the branch already selected to remove . \n    if (selectedBranch) {\n      const se = selectedBranches.filter(b => {\n        return b !== branch;\n      });\n      setSelected(se);\n      setIsSelected(false);\n    } else {\n      // new branch to array\n      const temp = selectedBranches;\n      temp.push(branch);\n      setSelected(temp);\n      setIsSelected(true);\n    }\n  };\n\n  const getCounter = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: getCls('cW5I2ewdL'),\n      style: {\n        textAlign: `${p.listAlign}`\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: getCls('wqN7qIpfw'),\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: counted\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }, this);\n  };\n\n  const getTextContent = () => {\n    let inner = {\n      __html: nBranchName.replace(\"<br>\", \"\").replace(/\\n\\n/g, \"<br>\").replace(/\\n/g, \"<br>\")\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: getCls('wrapper'),\n      style: {\n        textAlign: `${p.listAlign}`\n      },\n      children: [p.numberedList && getCounter(), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\" + branch.id,\n        dangerouslySetInnerHTML: inner,\n        className: `link branch-name ${isDark ? \"dark-link\" : \"light-link\"}`,\n        style: {\n          direction: `${branchDir()}`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }, this), hasChild && /*#__PURE__*/_jsxDEV(\"i\", {\n        onClick: branchesListToggleBranchMenu,\n        className: \"fas fa-ellipsis-h\",\n        style: {\n          marginBottom: 4,\n          fontSize: 10\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }, this);\n  };\n\n  const getYoutubeSource = () => {\n    return \"https://www.youtube.com/embed/\" + branch.name;\n  };\n\n  function getWindowDimensions() {\n    const {\n      innerWidth: width,\n      innerHeight: height\n    } = window;\n    return {\n      width,\n      height\n    };\n  }\n\n  const getYoutubeContent = () => {\n    // check client width : \n    if (getWindowDimensions().width > 600) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"youtube-container\",\n        children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n          width: \"560\",\n          height: \"315\",\n          src: getYoutubeSource(),\n          frameborder: \"0\",\n          allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n          allowfullscreen: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"youtube-container\",\n        children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n          width: \"300\",\n          height: \"250\",\n          src: getYoutubeSource(),\n          frameborder: \"0\",\n          allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n          allowfullscreen: \"true\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 20\n      }, this);\n    }\n  };\n\n  const getGistContent = () => {\n    return /*#__PURE__*/_jsxDEV(ReactEmbedGist, {\n      gist: branch.name,\n      titleClass: \"gist__title\",\n      contentClass: \"gist__content\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 16\n    }, this);\n  };\n\n  const getOriginName = () => {\n    return originTitle[0];\n  };\n\n  const getSoundName = () => {\n    console.log(originTitle);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: getCls('zhwiWnUPj'),\n      children: branch.extra && branch.extra.songName && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: getCls('songName1'),\n        children: [branch.extra.songName, \" - \", getOriginName()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 13\n    }, this);\n  };\n\n  const getEWidth = () => {\n    return 80;\n  };\n\n  const getSoundContent = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: getCls('q2Qj'),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: getCls('dtl'),\n        children: getSoundName()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AudioPlayer, {\n        src: branch.name // other props here\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 13\n    }, this);\n  };\n\n  const getImageContent = () => {\n    // check client width : \n    if (getWindowDimensions().width > 600) {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        style: {\n          maxWidth: 800\n        },\n        src: branch.name,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        style: {\n          width: 300\n        },\n        src: branch.name,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 20\n      }, this);\n    }\n  };\n\n  const getVideoContent = () => {\n    const e = /*#__PURE__*/_jsxDEV(Player, {\n      className: \"video-player\",\n      children: /*#__PURE__*/_jsxDEV(\"source\", {\n        src: branch.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 19\n    }, this);\n\n    return e;\n  };\n\n  const getLinkContent = () => {\n    if (branch.extra && branch.extra.name) {\n      const e = /*#__PURE__*/_jsxDEV(\"a\", {\n        href: branch.name,\n        className: isDark ? 'dark-link' : 'light-link',\n        children: branch.extra.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 23\n      }, this);\n\n      return e;\n    }\n\n    const e = /*#__PURE__*/_jsxDEV(\"a\", {\n      href: branch.name,\n      className: isDark ? 'dark-link' : 'light-link',\n      children: branch.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 19\n    }, this);\n\n    return e;\n  };\n\n  const getBranch = () => {\n    let content;\n\n    if (branch.type === 'text') {\n      content = getTextContent();\n    }\n\n    if (branch.type === 'image') {\n      content = getImageContent();\n    }\n\n    if (branch.type === 'youtube') {\n      content = getYoutubeContent();\n    }\n\n    if (branch.type === 'gist') {\n      content = getGistContent();\n    }\n\n    if (branch.type === 'sound') {\n      content = getSoundContent();\n    }\n\n    if (branch.type === 'video') {\n      content = getVideoContent();\n    }\n\n    if (branch.type === 'link') {\n      content = getLinkContent();\n    }\n\n    return content;\n  };\n\n  const branchExMenu = () => {\n    setIsExMenu(!isExMenu);\n  };\n\n  const togglePinAPI = () => {\n    if (isPinned == 1) setIsPinned(0);\n    if (isPinned == 0) setIsPinned(1);\n    tokenPatch(p.apiBase2 + '/branches', {\n      id: branch.id,\n      pinned: isPinned\n    }, p.token).then(d => {\n      sendSuccess('pinned : ' + isPinned);\n    });\n  };\n\n  const togglePosAPI = () => {\n    if (isPositive == 1) setIsPositive(0);\n    if (isPositive == 0) setIsPositive(1);\n    tokenPatch(p.apiBase2 + '/branches', {\n      id: branch.id,\n      positive: isPositive\n    }, p.token).then(d => {\n      sendSuccess('positive : ' + isPositive);\n    });\n  };\n\n  const getPinned = () => {\n    if (!isPinned) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: getCls('pinned'),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"4Wt\",\n          children: \"pinned\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"pinToggler\",\n          onClick: () => {\n            togglePinAPI();\n          },\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-toggle-off\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 21\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: getCls('pinned'),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"pinned\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"pinToggler\",\n          onClick: () => {\n            togglePinAPI();\n          },\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-toggle-on\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 21\n      }, this);\n    }\n  };\n\n  const getPositive = () => {\n    if (!isPositive) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: getCls('positive'),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"4Wt\",\n          children: \"positive\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"posToggler\",\n          onClick: () => {\n            togglePosAPI();\n          },\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-toggle-off\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 21\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: getCls('positive'),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"positive\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"posToggler\",\n          onClick: () => {\n            togglePosAPI();\n          },\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-toggle-on\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 21\n      }, this);\n    }\n  };\n  /* \n   state  . \n  groups\n  groupName\n  selectedGroups\n   - get all groups from the db \n  - create input to handle user input\n  - filter groups by input\n  - selection section\n      - dis select on click o\n  - results section\n    - get branch groups to selected groups\n   \n  \n  */\n\n\n  const getRootActions = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"branch-actions\",\n      children: [!isMoving && /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-arrow-up branch-action branch-arrow-up\",\n        onClick: () => {\n          handleMoveBranch(1);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 31\n      }, this), !isMoving && /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-arrow-down branch-action branch-arrow-down\",\n        onClick: () => {\n          handleMoveBranch(0);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 31\n      }, this), !isDeleting && /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-eraser branch-action branch-remove\",\n        onClick: () => {\n          handleBranchRemove();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: '/nested/' + branch._id,\n        className: p.getCls('link'),\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-expand-alt branch-action\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 81\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 17\n      }, this), !isExMenu && /*#__PURE__*/_jsxDEV(\"i\", {\n        onClick: branchExMenu,\n        className: \"fas fa-caret-square-down branch-action\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 31\n      }, this), selectedBranch && /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"far fa-check-square checkbox\",\n        onClick: () => {\n          handleSelectedBranch();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 36\n      }, this), !selectedBranch && /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"far fa-square checkbox\",\n        onClick: () => {\n          handleSelectedBranch();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 13\n    }, this);\n  };\n\n  function sendSuccess(msg) {\n    setInfo(true);\n    setSuccess(msg);\n    setTimeout(() => {\n      setInfo(false);\n      setSuccess(false);\n    }, 3000);\n  }\n\n  const saveNewName = () => {\n    tokenPatch(p.apiBase + '/branch', {\n      id: branch._id,\n      name: nBranchName\n    }, p.token).then(d => {\n      branch.name = d.name;\n      sendSuccess('Name Changed');\n    });\n  };\n\n  function toggleGroup(group) {\n    // remove group from the branch \n    // todo change base and the posted data\n    tokenPost(p.apiBase2 + '/branches/toggle-group', {\n      branchID: branch.id,\n      groupID: group.id\n    }, p.token).then(d => {\n      // set selected groups\n      tokenGet(p.apiBase2 + '/branches/branch-groups?id=' + branch.id, {\n        Authorization: p.token\n      }).then(d => {\n        setSGroups(d);\n        setSelGroupLoading(false);\n      });\n    });\n  }\n\n  function togglePerson(person) {\n    // remove group from the branch \n    tokenPost(p.apiBase2 + '/branches/toggle-person', {\n      branchID: branch.id,\n      personID: person.id\n    }, p.token).then(d => {\n      // set selected people\n      tokenGet(p.apiBase2 + '/branches/branch-people?id=' + branch.id, {\n        Authorization: p.token\n      }).then(d => {\n        setSPeople(d);\n      });\n    });\n  }\n\n  function toggleTag(tag) {\n    // remove tag from the branch \n    tokenPost(p.apiBase2 + '/branches/toggle-tag', {\n      branchID: branch.id,\n      tagID: tag.id\n    }, p.token).then(d => {\n      // set selected people\n      tokenGet(p.apiBase2 + '/branches/branch-tags?id=' + branch.id, {\n        Authorization: p.token\n      }).then(d => {\n        setSTags(d);\n      });\n    });\n  }\n\n  function getSelectedGroups() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: getCls('selectedGroups'),\n      children: !selGroupLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: sGroups.map(group => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: getCls('group0'),\n          onClick: () => {\n            toggleGroup(group);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: getCls('v04TWL'),\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-check\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 503,\n              columnNumber: 64\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"grGP\",\n            children: group.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 504,\n            columnNumber: 29\n          }, this)]\n        }, group.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 38\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 13\n    }, this);\n  }\n\n  function getSelectedTags() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: getCls('selectedTags'),\n      children: !selTagsLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: sTags.map(tag => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: getCls('group0'),\n          onClick: () => {\n            toggleTag(tag);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: getCls('v04TWL'),\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-check\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 522,\n              columnNumber: 64\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 522,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"grGP\",\n            children: tag.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 523,\n            columnNumber: 29\n          }, this)]\n        }, tag.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 517,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 37\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 13\n    }, this);\n  }\n\n  function getSelectedPeople() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: getCls('selectedGroups'),\n      children: !selPeopleLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: sPeople.map(group => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: getCls('group0'),\n          onClick: () => {\n            togglePerson(group);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: getCls('v04TWL'),\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-check\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 542,\n              columnNumber: 64\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 542,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"grGP\",\n            children: group.fname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 543,\n            columnNumber: 29\n          }, this)]\n        }, group._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 537,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 535,\n        columnNumber: 39\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 13\n    }, this);\n  }\n\n  function groupEditChange(e) {\n    const val = e.target.value;\n    setNGroupName(val); // get all groups from the db .\n\n    tokenGet(p.apiBase2 + '/groups/search?q=' + val, {\n      Authorization: p.token\n    }).then(d => {\n      setRGroups(d);\n    });\n  }\n\n  function tagEditChange(e) {\n    const val = e.target.value;\n    setNTagName(val); // get all tags from the db .\n\n    tokenGet(p.apiBase2 + '/tags/search?q=' + val, {\n      Authorization: p.token\n    }).then(d => {\n      setRTags(d);\n    });\n  }\n\n  function personEditChange(e) {\n    const val = e.target.value;\n    setNPersonName(val); // get all groups from the db .\n\n    tokenGet(p.apiBase2 + '/people/search?q=' + val, {\n      Authorization: p.token\n    }).then(d => {\n      setRPeople(d);\n    });\n  }\n\n  function handleNewGroup(group) {\n    // toggle group to branch \n    toggleGroup(group);\n  }\n\n  function handleNewTag(tag) {\n    // toggle group to branch \n    toggleTag(tag);\n  }\n\n  function handleNewPerson(person) {\n    // toggle group to branch\n    togglePerson(person);\n  }\n\n  function handleNewInputGroup() {\n    tokenPost(p.apiBase2 + '/groups', {\n      name: nGroupName\n    }, p.token).then(d => {});\n  }\n\n  function handleNewInputPerson() {\n    tokenPost(p.apiBase2 + '/people', {\n      fname: nPersonName\n    }, p.token).then(d => {});\n  }\n\n  function handleNewInputTag() {\n    tokenPost(p.apiBase2 + '/tags', {\n      name: nTagName\n    }, p.token).then(d => {});\n  }\n\n  function getInputGroups() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: getCls('kdW3'),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: getCls('form'),\n        children: [/*#__PURE__*/_jsxDEV(Input1, {\n          value: nGroupName,\n          placeholder: \"group name\",\n          type: \"text\",\n          onChange: e => {\n            groupEditChange(e);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 611,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: getCls('lRb4'),\n          onClick: handleNewInputGroup,\n          children: \"New\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 612,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 610,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: getCls('result'),\n        children: rGroups && rGroups.length > 0 && rGroups.map(g => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"GV\",\n          onClick: () => {\n            handleNewGroup(g);\n          },\n          children: g.name\n        }, g.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 617,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 615,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 608,\n      columnNumber: 13\n    }, this);\n  }\n\n  function getInputTags() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: getCls('kdW3'),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: getCls('form'),\n        children: [/*#__PURE__*/_jsxDEV(Input1, {\n          value: nTagName,\n          placeholder: \"tag name\",\n          type: \"text\",\n          onChange: e => {\n            tagEditChange(e);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 630,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: getCls('lRb4'),\n          onClick: handleNewInputTag,\n          children: \"New\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 631,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 629,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: getCls('result'),\n        children: rTags && rTags.length > 0 && rTags.map(t => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"GV\",\n          onClick: () => {\n            handleNewTag(t);\n          },\n          children: t.name\n        }, t.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 636,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 634,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 627,\n      columnNumber: 13\n    }, this);\n  }\n\n  function getInputPeople() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: getCls('kdW3'),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: getCls('form'),\n        children: [/*#__PURE__*/_jsxDEV(Input1, {\n          value: nPersonName,\n          placeholder: \"person name\",\n          type: \"text\",\n          onChange: e => {\n            personEditChange(e);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 649,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: getCls('lRb4'),\n          onClick: () => {\n            handleNewInputPerson();\n          },\n          children: \"New\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 650,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 648,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: getCls('result'),\n        children: rPeople.map(g => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"GV\",\n          onClick: () => {\n            handleNewPerson(g);\n          },\n          children: g.fname\n        }, g._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 656,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 654,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 646,\n      columnNumber: 13\n    }, this);\n  }\n\n  function getGroupsSection() {\n    // selected groups section\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: getCls('OcnAq'),\n      children: [getSelectedGroups(), getInputGroups()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 668,\n      columnNumber: 13\n    }, this);\n  }\n\n  function getTagsSection() {\n    // selected tags section\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: getCls('OcnAq'),\n      children: [getSelectedTags(), getInputTags()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 677,\n      columnNumber: 13\n    }, this);\n  }\n\n  function getPeopleSection() {\n    // selected groups section\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: getCls('OcnAq'),\n      children: [getSelectedPeople(), getInputPeople()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 687,\n      columnNumber: 13\n    }, this);\n  }\n\n  const setDir = () => {\n    if (branch.lang === 'ar') return 'rtl';else return 'ltr';\n  };\n\n  const setTextAlign = () => {\n    if (branch.lang === 'ar') return 'right';else return 'left';\n  };\n\n  const handleNameChange = e => {\n    setNBranchName(e.target.innerText);\n  };\n\n  const getExMenu = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: getCls('wrapper1'),\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        onClick: branchExMenu,\n        className: \"far fa-times-circle branch-action\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 711,\n        columnNumber: 17\n      }, this), info && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: getCls('info-section'),\n        children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: getCls('error-section'),\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 713,\n          columnNumber: 31\n        }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: getCls('success-section'),\n          children: success\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 716,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 712,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: getCls('input') + ' exMenuItem newNameEdit',\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: getCls('edit-branch-wrapper'),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: getCls('edit-container'),\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              contentEditable: \"true\",\n              id: \"branchName\",\n              className: \"input-name\",\n              onInput: e => handleNameChange(e),\n              style: {\n                direction: `${setDir()}`,\n                textAlign: `${setTextAlign()}`\n              },\n              children: oldBName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 727,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 726,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: getCls('submit-edit'),\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: getCls('submitBranchName'),\n              onClick: () => {\n                saveNewName();\n              },\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 735,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 734,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 725,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 721,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: getCls('pinned') + ' exMenuItem',\n        children: getPinned()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 742,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: getCls('positive') + ' exMenuItem',\n        children: getPositive()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 746,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: getCls('groups'),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Groups\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 751,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 751,\n          columnNumber: 21\n        }, this), getGroupsSection()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 750,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: getCls('people'),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"People\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 755,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 755,\n          columnNumber: 21\n        }, this), getPeopleSection()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 754,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: getCls('tags'),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Tags\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 759,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 759,\n          columnNumber: 21\n        }, this), getTagsSection()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 758,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 709,\n      columnNumber: 13\n    }, this);\n  };\n\n  const gBranchActions = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: getCls('actions-container'),\n      children: p.branchesListIsBranchMenu && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: getCls('wrapper0'),\n        children: [!isExMenu && getRootActions(), isExMenu && getExMenu()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 771,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 769,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: getCls('branch-container'),\n    style: {\n      marginBottom: p.branchMargin,\n      backgroundColor: p.branchBKColor\n    },\n    children: [getBranch(), gBranchActions()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 781,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Single, \"JfA1NsXRQVySt6saG3Kj7iRB3yc=\");\n\n_c = Single;\n\nasync function deleteFunc(url = '') {\n  // Default options are marked with *\n  const response = await fetch(url, {\n    method: 'DELETE',\n    // *GET, POST, PUT, DELETE, etc.\n    mode: 'cors',\n    // no-cors, *cors, same-origin\n    cache: 'no-cache',\n    // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: 'same-origin',\n    // include, *same-origin, omit\n    redirect: 'follow',\n    // manual, *follow, error\n    referrerPolicy: 'no-referrer' // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n\n  });\n  return response.json(); // parses JSON response into native JavaScript objects\n}\n\nexport default Single;\n\nvar _c;\n\n$RefreshReg$(_c, \"Single\");","map":{"version":3,"sources":["F:/React/tree-mysql/src/Components/branches/single/Single.js"],"names":["React","useEffect","useState","ReactEmbedGist","ReactAudioPlayer","Player","AudioPlayer","Input1","Link","tokenGet","tokenPatch","tokenPost","Single","props","branch","isDark","apiBase","location","setData","setEdit","setBranch","selectedBranches","setSelected","p","counted","ex","originTitle","branchTitle","getCls","base","isDeleting","setDeleting","isMoving","setMoving","selectedBranch","setIsSelected","isExMenu","setIsExMenu","isPinned","setIsPinned","pinned","isPositive","setIsPositive","positive","nBranchName","setNBranchName","name","oldBName","setOldBName","success","setSuccess","error","setError","info","setInfo","sGroups","setSGroups","nGroupName","setNGroupName","rGroups","setRGroups","rTags","setRTags","selGroupLoading","setSelGroupLoading","sPeople","setSPeople","sTags","setSTags","nPersonName","setNPersonName","nTagName","setNTagName","rPeople","setRPeople","selPeopleLoading","setSelPeopleLoading","selTagsLoading","setSelTagsLoading","hasChild","children","length","apiBase2","id","Authorization","token","then","d","console","log","branchesListToggleBranchMenu","setBranchesListBranchMenu","branchesListIsBranchMenu","branchDir","lang","handleBranchEdit","handleMoveBranch","dir","url","_id","e","rootBranches","filter","b","origin","handleBranchRemove","deleteFunc","json","fetch","handleSelectedBranch","se","temp","push","getCounter","textAlign","listAlign","getTextContent","inner","__html","replace","numberedList","direction","marginBottom","fontSize","getYoutubeSource","getWindowDimensions","innerWidth","width","innerHeight","height","window","getYoutubeContent","getGistContent","getOriginName","getSoundName","extra","songName","getEWidth","getSoundContent","getImageContent","maxWidth","getVideoContent","getLinkContent","getBranch","content","type","branchExMenu","togglePinAPI","sendSuccess","togglePosAPI","getPinned","getPositive","getRootActions","msg","setTimeout","saveNewName","toggleGroup","group","branchID","groupID","togglePerson","person","personID","toggleTag","tag","tagID","getSelectedGroups","map","getSelectedTags","getSelectedPeople","fname","groupEditChange","val","target","value","tagEditChange","personEditChange","handleNewGroup","handleNewTag","handleNewPerson","handleNewInputGroup","handleNewInputPerson","handleNewInputTag","getInputGroups","g","getInputTags","t","getInputPeople","getGroupsSection","getTagsSection","getPeopleSection","setDir","setTextAlign","handleNameChange","innerText","getExMenu","gBranchActions","branchMargin","backgroundColor","branchBKColor","response","method","mode","cache","credentials","redirect","referrerPolicy"],"mappings":"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","sourcesContent":["import { React, useEffect, useState } from 'react'\nimport ReactEmbedGist from 'react-embed-gist';\nimport ReactAudioPlayer from 'react-audio-player';\nimport { Player } from 'video-react';\nimport AudioPlayer from 'react-h5-audio-player';\nimport 'react-h5-audio-player/lib/styles.css';\nimport Input1 from '../../Inputs/input1'\n\nimport { Link } from 'react-router-dom'\nimport './single.css'\nimport { tokenGet, tokenPatch, tokenPost } from '../../../utils/functions';\nfunction Single(props) {\n    const { branch, isDark, apiBase, location, setData, setEdit, setBranch, selectedBranches, setSelected, p, counted, ex } = props\n    const originTitle = ex.branchTitle\n    const getCls = (base) => { return p.getCls('xEzOkLwAp64vOO2CGf-' + base) }\n    const [isDeleting, setDeleting] = useState(false)\n    const [isMoving, setMoving] = useState(false)\n    const [selectedBranch, setIsSelected] = useState(false)\n    const [isExMenu, setIsExMenu] = useState(false)\n    const [isPinned, setIsPinned] = useState(branch.pinned)\n    const [isPositive, setIsPositive] = useState(branch.positive)\n    const [nBranchName, setNBranchName] = useState(branch.name)\n    const [oldBName, setOldBName] = useState(branch.name)\n    const [success, setSuccess] = useState(false)\n    const [error, setError] = useState(false)\n    const [info, setInfo] = useState(false)\n    // selected groups\n    const [sGroups, setSGroups] = useState([])\n    // new group name input\n    const [nGroupName, setNGroupName] = useState('')\n    // result groups \n    const [rGroups, setRGroups] = useState([])\n    // result groups \n    const [rTags, setRTags] = useState([])\n    // isLoading \n    const [selGroupLoading, setSelGroupLoading] = useState(true)\n    // selected People\n    const [sPeople, setSPeople] = useState([])\n    // selected tags\n    const [sTags, setSTags] = useState([])\n    // new person name input\n    const [nPersonName, setNPersonName] = useState('')\n    // new tag name input\n    const [nTagName, setNTagName] = useState('')\n    // result people \n    const [rPeople, setRPeople] = useState([])\n    // isLoading \n    const [selPeopleLoading, setSelPeopleLoading] = useState(true)\n    // isLoading \n    const [selTagsLoading, setSelTagsLoading] = useState(true)\n    // branch has children : \n    let hasChild = false\n    if (branch && branch.children && branch.children.length > 0)\n        hasChild = true\n\n    useEffect(() => {\n\n        // set selected groups\n        tokenGet(p.apiBase2 + '/branches/branch-groups?id=' + branch.id, { Authorization: p.token })\n            .then((d) => {\n                console.log('groups', d)\n                setSGroups(d)\n                setSelGroupLoading(false)\n            })\n\n    }, [])\n\n    useEffect(() => {\n        tokenGet(p.apiBase2 + '/branches/branch-groups?id=' + branch.id, { Authorization: p.token })\n            .then((d) => {\n                console.log('people', d)\n                setSPeople(d)\n                setSelPeopleLoading(false)\n            })\n\n    }, [])\n\n    useEffect(() => {\n        tokenGet(p.apiBase2 + '/branches/branch-tags?id=' + branch.id, { Authorization: p.token })\n            .then((d) => {\n                console.log('tags', d)\n                setSTags(d)\n                setSelTagsLoading(false)\n            })\n\n    }, [])\n\n\n\n    const branchesListToggleBranchMenu = () => {\n        p.setBranchesListBranchMenu(!p.branchesListIsBranchMenu)\n    }\n\n    const branchDir = () => {\n        if (branch.lang == 'ar') return 'rtl'\n        else return 'ltr'\n    }\n\n    const handleBranchEdit = () => {\n        setEdit(true)\n        setBranch(branch)\n    }\n    const handleMoveBranch = (dir) => {\n        setMoving(true)\n        const url = apiBase + '/branch/move?id=' + branch._id + '&dir=' + dir\n\n        console.log(url)\n\n        tokenGet(url, { token: p.token }).then((d) => {\n            console.log(d)\n            // fetch new branches . \n            let url\n            if (location.length > 0) {\n                url = url = apiBase + '/branch?id=' + location\n                tokenGet(url, { token: p.token }).then((d) => {\n                    setData(d)\n                    setMoving(false)\n                })\n            } else {\n                url = url = apiBase + '/branch'\n                tokenGet(url, { token: p.token }).then((e) => {\n                    // extract root branches : \n                    const rootBranches = e.filter((b) => {\n                        return b.origin == null\n                    })\n                    setData(rootBranches)\n                    setMoving(false)\n                })\n            }\n        })\n    }\n\n    const handleBranchRemove = () => {\n        setDeleting(true)\n        const url = apiBase + '/branch?id=' + branch._id + '&complete=true'\n        deleteFunc(url).then(e => {\n            return e.json\n        }).then(e => {\n            // fetch new branches . \n            let url\n            if (location && location.length)\n                url = apiBase + '/branch?id=' + location\n            else url = apiBase + '/branch'\n            fetch(url).then(d => {\n                return d.json()\n            }).then(e => {\n                if (location && location.length > 0)\n                    setData(e)\n                else {\n                    // extract root branches : \n                    // extract root branches : \n                    const rootBranches = e.filter((b) => {\n                        return b.origin == null\n                    })\n                    setData(rootBranches)\n\n                }\n            })\n        })\n    }\n    const handleSelectedBranch = () => {\n        // update selected branches status\n\n        // check if the branch already selected to remove . \n        if (selectedBranch) {\n            const se = selectedBranches.filter((b) => {\n                return b !== branch\n            })\n            setSelected(se)\n            setIsSelected(false)\n        } else {\n            // new branch to array\n            const temp = selectedBranches\n            temp.push(branch)\n            setSelected(temp)\n            setIsSelected(true)\n        }\n\n    }\n\n    const getCounter = () => {\n        return (\n            <div className={getCls('cW5I2ewdL')} style={{ textAlign: `${p.listAlign}` }}>\n                <div className={getCls('wqN7qIpfw')} >\n                    <span>{counted}</span>\n                </div>\n            </div>\n        )\n    }\n\n\n    const getTextContent = () => {\n        let inner = { __html: nBranchName.replace(\"<br>\", \"\").replace(/\\n\\n/g, \"<br>\").replace(/\\n/g, \"<br>\") }\n        return (\n            <div className={getCls('wrapper')} style={{ textAlign: `${p.listAlign}` }}>\n                {/* counter  */}\n                {p.numberedList && getCounter()}\n                {/* link */}\n                <Link to={\"/\" + branch.id} dangerouslySetInnerHTML={inner} className={`link branch-name ${isDark ? \"dark-link\" : \"light-link\"}`} style={{ direction: `${branchDir()}`, }}>\n                </Link>\n                {/* has child  */}\n                {hasChild && <i onClick={branchesListToggleBranchMenu} className=\"fas fa-ellipsis-h\" style={{ marginBottom: 4, fontSize: 10 }}></i>}\n\n            </div>\n        )\n    }\n\n    const getYoutubeSource = () => {\n        return \"https://www.youtube.com/embed/\" + branch.name\n    }\n\n    function getWindowDimensions() {\n        const { innerWidth: width, innerHeight: height } = window;\n        return {\n            width,\n            height\n        };\n    }\n\n    const getYoutubeContent = () => {\n        // check client width : \n        if (getWindowDimensions().width > 600) {\n            return <div className=\"youtube-container\">\n                <iframe width=\"560\" height=\"315\" src={getYoutubeSource()} frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n            </div>\n        } else {\n            return <div className=\"youtube-container\">\n                <iframe width=\"300\" height=\"250\" src={getYoutubeSource()} frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen='true'></iframe>\n            </div>\n        }\n    }\n\n    const getGistContent = () => {\n        return <ReactEmbedGist gist={branch.name} titleClass=\"gist__title\"\n            contentClass=\"gist__content\" />\n    }\n\n    const getOriginName = () => {\n        return originTitle[0]\n    }\n\n    const getSoundName = () => {\n        console.log(originTitle);\n        return (\n            <div className={getCls('zhwiWnUPj')}>\n                {branch.extra && branch.extra.songName &&\n                    <div className={getCls('songName1')}>\n                        {branch.extra.songName} - {getOriginName()}\n                    </div>\n                }\n            </div>\n        )\n    }\n\n    const getEWidth = () => {\n        return 80\n    }\n\n\n    const getSoundContent = () => {\n        return (\n            <div className={getCls('q2Qj')}>\n                <div className={getCls('dtl')}>\n                    {getSoundName()}\n                </div>\n                <AudioPlayer\n                    src={branch.name}\n                // other props here\n                />\n            </div>\n        )\n\n    }\n\n    const getImageContent = () => {\n        // check client width : \n        if (getWindowDimensions().width > 600) {\n            return <img style={{ maxWidth: 800 }} src={branch.name} alt=\"\" />\n        } else {\n            return <img style={{ width: 300 }} src={branch.name} alt=\"\" />\n        }\n    }\n\n    const getVideoContent = () => {\n        const e = <Player className=\"video-player\">\n            <source src={branch.name} />\n        </Player>\n        return e\n    }\n    const getLinkContent = () => {\n        if (branch.extra && branch.extra.name) {\n            const e = <a href={branch.name} className={isDark ? 'dark-link' : 'light-link'}>{branch.extra.name}</a>\n            return e\n        }\n\n        const e = <a href={branch.name} className={isDark ? 'dark-link' : 'light-link'}>{branch.name}</a>\n        return e\n    }\n\n    const getBranch = () => {\n        let content;\n        if (branch.type === 'text') {\n            content = getTextContent()\n        }\n        if (branch.type === 'image') {\n            content = getImageContent()\n        }\n\n        if (branch.type === 'youtube') {\n            content = getYoutubeContent()\n        }\n        if (branch.type === 'gist') {\n            content = getGistContent()\n        }\n        if (branch.type === 'sound') {\n            content = getSoundContent()\n        }\n        if (branch.type === 'video') {\n            content = getVideoContent()\n        }\n        if (branch.type === 'link') {\n            content = getLinkContent()\n        }\n\n        return content\n    }\n\n    const branchExMenu = () => {\n        setIsExMenu(!isExMenu)\n    }\n\n    const togglePinAPI = () => {\n        if(isPinned == 1) setIsPinned(0)\n        if(isPinned == 0) setIsPinned(1)\n        tokenPatch(p.apiBase2 + '/branches', { id: branch.id, pinned: isPinned }, p.token).then((d) => {\n            sendSuccess('pinned : ' + isPinned)\n        })\n    }\n    const togglePosAPI = () => {\n        if(isPositive == 1) setIsPositive(0)\n        if(isPositive == 0) setIsPositive(1)\n        tokenPatch(p.apiBase2 + '/branches', { id: branch.id, positive: isPositive }, p.token).then((d) => {\n            sendSuccess('positive : ' + isPositive)\n        })\n    }\n\n    const getPinned = () => {\n        if (!isPinned) {\n            return (<div className={getCls('pinned')}>\n                <span className='4Wt'>pinned</span>\n                <span className=\"pinToggler\" onClick={() => { togglePinAPI() }}>\n                    <i className=\"fas fa-toggle-off\"></i>\n                </span>\n            </div>)\n        } else {\n            return (<div className={getCls('pinned')}>\n                <span>pinned</span>\n                <span className=\"pinToggler\" onClick={() => {\n                    togglePinAPI()\n                }}>\n                    <i className=\"fas fa-toggle-on\"></i>\n                </span>\n            </div>)\n        }\n    }\n\n    const getPositive = () => {\n        if (!isPositive) {\n            return (<div className={getCls('positive')}>\n                <span className='4Wt'>positive</span>\n                <span className=\"posToggler\" onClick={() => { togglePosAPI() }}>\n                    <i className=\"fas fa-toggle-off\"></i>\n                </span>\n            </div>)\n        } else {\n            return (<div className={getCls('positive')}>\n                <span>positive</span>\n                <span className=\"posToggler\" onClick={() => { togglePosAPI() }}>\n                    <i className=\"fas fa-toggle-on\"></i>\n                </span>\n            </div>)\n        }\n    }\n\n\n    /* \n\n    state  . \n    groups\n    groupName\n    selectedGroups\n\n    - get all groups from the db \n    - create input to handle user input\n    - filter groups by input\n    - selection section\n        - dis select on click o\n    - results section\n\n\n    - get branch groups to selected groups\n\n    \n    \n    */\n\n    const getRootActions = () => {\n        return (\n            <div className=\"branch-actions\">\n\n\n                {/* change position */}\n                {!isMoving && <i className=\"fas fa-arrow-up branch-action branch-arrow-up\" onClick={() => {\n                    handleMoveBranch(1)\n                }}></i>}\n                {!isMoving && <i className=\"fas fa-arrow-down branch-action branch-arrow-down\" onClick={() => {\n                    handleMoveBranch(0)\n                }}></i>}\n\n                {/* delete */}\n                {!isDeleting && <i className=\"fas fa-eraser branch-action branch-remove\" onClick={() => {\n                    handleBranchRemove()\n                }}></i>}\n\n                {/* show nested  */}\n                <Link to={'/nested/' + branch._id} className={p.getCls('link')}><i className=\"fas fa-expand-alt branch-action\" ></i></Link>\n\n                {/* expanded Menu */}\n                {!isExMenu && <i onClick={branchExMenu} className=\"fas fa-caret-square-down branch-action\"></i>}\n\n                {/* select */}\n                {selectedBranch && <i className=\"far fa-check-square checkbox\" onClick={() => {\n                    handleSelectedBranch()\n                }}></i>}\n                {!selectedBranch && <i className=\"far fa-square checkbox\" onClick={() => {\n                    handleSelectedBranch()\n                }}></i>}\n\n\n            </div>\n        )\n    }\n\n    function sendSuccess(msg) {\n        setInfo(true)\n        setSuccess(msg)\n        setTimeout(() => {\n            setInfo(false)\n            setSuccess(false)\n        }, 3000)\n    }\n\n    const saveNewName = () => {\n        tokenPatch(p.apiBase + '/branch', { id: branch._id, name: nBranchName }, p.token).then((d) => {\n            branch.name = d.name\n            sendSuccess('Name Changed')\n        })\n    }\n\n    function toggleGroup(group) {\n        // remove group from the branch \n        // todo change base and the posted data\n        tokenPost(p.apiBase2 + '/branches/toggle-group', { branchID: branch.id, groupID: group.id }, p.token).then((d) => {\n            // set selected groups\n            tokenGet(p.apiBase2 + '/branches/branch-groups?id=' + branch.id, { Authorization: p.token })\n                .then((d) => {\n                    setSGroups(d)\n                    setSelGroupLoading(false)\n                })\n        })\n    }\n    function togglePerson(person) {\n        // remove group from the branch \n        tokenPost(p.apiBase2 + '/branches/toggle-person', { branchID: branch.id, personID: person.id }, p.token).then((d) => {\n            // set selected people\n            tokenGet(p.apiBase2 + '/branches/branch-people?id=' + branch.id, { Authorization: p.token })\n                .then((d) => {\n                    setSPeople(d)\n                })\n        })\n    }\n    function toggleTag(tag) {\n        // remove tag from the branch \n        tokenPost(p.apiBase2 + '/branches/toggle-tag', { branchID: branch.id, tagID: tag.id }, p.token).then((d) => {\n            // set selected people\n            tokenGet(p.apiBase2 + '/branches/branch-tags?id=' + branch.id, { Authorization: p.token })\n                .then((d) => {\n                    setSTags(d)\n                })\n        })\n    }\n\n    function getSelectedGroups() {\n        return (\n            <div className={getCls('selectedGroups')}>\n                {!selGroupLoading && <div>\n                    {sGroups.map(group => (\n                        <div\n                            key={group.id}\n                            className={getCls('group0')}\n                            onClick={() => { toggleGroup(group) }}\n                        >\n                            <span className={getCls('v04TWL')}><i className=\"fas fa-check\"></i></span>\n                            <span className='grGP'>{group.name}</span>\n                        </div>\n                    ))}\n                </div>}\n\n            </div>\n        )\n    }\n    function getSelectedTags() {\n        return (\n            <div className={getCls('selectedTags')}>\n                {!selTagsLoading && <div>\n                    {sTags.map(tag => (\n                        <div\n                            key={tag.id}\n                            className={getCls('group0')}\n                            onClick={() => { toggleTag(tag) }}\n                        >\n                            <span className={getCls('v04TWL')}><i className=\"fas fa-check\"></i></span>\n                            <span className='grGP'>{tag.name}</span>\n                        </div>\n                    ))}\n                </div>}\n\n            </div>\n        )\n    }\n\n    function getSelectedPeople() {\n        return (\n            <div className={getCls('selectedGroups')}>\n                {!selPeopleLoading && <div>\n                    {sPeople.map(group => (\n                        <div\n                            key={group._id}\n                            className={getCls('group0')}\n                            onClick={() => { togglePerson(group) }}\n                        >\n                            <span className={getCls('v04TWL')}><i className=\"fas fa-check\"></i></span>\n                            <span className='grGP'>{group.fname}</span>\n                        </div>\n                    ))}\n                </div>}\n\n            </div>\n        )\n    }\n\n    function groupEditChange(e) {\n        const val = e.target.value\n        setNGroupName(val)\n        // get all groups from the db .\n        tokenGet(p.apiBase2 + '/groups/search?q=' + val, { Authorization: p.token }).then((d) => {\n            setRGroups(d)\n        })\n    }\n    function tagEditChange(e) {\n        const val = e.target.value\n        setNTagName(val)\n        // get all tags from the db .\n        tokenGet(p.apiBase2 + '/tags/search?q=' + val, { Authorization: p.token }).then((d) => {\n            setRTags(d)\n        })\n    }\n    function personEditChange(e) {\n        const val = e.target.value\n        setNPersonName(val)\n        // get all groups from the db .\n        tokenGet(p.apiBase2 + '/people/search?q=' + val, { Authorization: p.token }).then((d) => {\n            setRPeople(d)\n        })\n    }\n\n    function handleNewGroup(group) {\n        // toggle group to branch \n        toggleGroup(group)\n    }\n    function handleNewTag(tag) {\n        // toggle group to branch \n        toggleTag(tag)\n    }\n    function handleNewPerson(person) {\n        // toggle group to branch\n        togglePerson(person)\n    }\n\n    function handleNewInputGroup() {\n        tokenPost(p.apiBase2 + '/groups', { name: nGroupName }, p.token).then((d) => {\n        }\n        )\n    }\n    function handleNewInputPerson() {\n        tokenPost(p.apiBase2 + '/people', { fname: nPersonName }, p.token).then((d) => {\n        }\n        )\n    }\n    function handleNewInputTag() {\n        tokenPost(p.apiBase2 + '/tags', { name: nTagName }, p.token).then((d) => {\n        }\n        )\n    }\n\n    function getInputGroups() {\n        return (\n            <div className={getCls('kdW3')}>\n                {/* input form */}\n                <div className={getCls('form')}>\n                    <Input1 value={nGroupName} placeholder='group name' type='text' onChange={(e) => { groupEditChange(e) }} />\n                    <span className={getCls('lRb4')} onClick={handleNewInputGroup}>New</span>\n                </div>\n                {/* result container */}\n                <div className={getCls('result')}>\n                    {rGroups && rGroups.length > 0 && rGroups.map(g => (\n                        <div key={g.id} className='GV' onClick={() => { handleNewGroup(g) }}>\n                            {g.name}\n                        </div>\n                    ))}\n                </div>\n            </div>\n        )\n    }\n    function getInputTags() {\n        return (\n            <div className={getCls('kdW3')}>\n                {/* input form */}\n                <div className={getCls('form')}>\n                    <Input1 value={nTagName} placeholder='tag name' type='text' onChange={(e) => { tagEditChange(e) }} />\n                    <span className={getCls('lRb4')} onClick={handleNewInputTag}>New</span>\n                </div>\n                {/* result container */}\n                <div className={getCls('result')}>\n                    {rTags && rTags.length > 0 && rTags.map(t => (\n                        <div key={t.id} className='GV' onClick={() => { handleNewTag(t) }}>\n                            {t.name}\n                        </div>\n                    ))}\n                </div>\n            </div>\n        )\n    }\n    function getInputPeople() {\n        return (\n            <div className={getCls('kdW3')}>\n                {/* input form */}\n                <div className={getCls('form')}>\n                    <Input1 value={nPersonName} placeholder='person name' type='text' onChange={(e) => { personEditChange(e) }} />\n                    <span className={getCls('lRb4')}\n                        onClick={() => { handleNewInputPerson() }}>New</span>\n                </div>\n                {/* result container */}\n                <div className={getCls('result')}>\n                    {rPeople.map(g => (\n                        <div key={g._id} className='GV' onClick={() => { handleNewPerson(g) }}>\n                            {g.fname}\n                        </div>\n                    ))}\n                </div>\n            </div>\n        )\n    }\n\n    function getGroupsSection() {\n        // selected groups section\n        return (\n            <div className={getCls('OcnAq')}>\n                {getSelectedGroups()}\n                {getInputGroups()}\n            </div>\n        )\n    }\n    function getTagsSection() {\n        // selected tags section\n        return (\n            <div className={getCls('OcnAq')}>\n                {getSelectedTags()}\n                {getInputTags()}\n            </div>\n        )\n    }\n\n    function getPeopleSection() {\n        // selected groups section\n        return (\n            <div className={getCls('OcnAq')}>\n                {getSelectedPeople()}\n                {getInputPeople()}\n            </div>\n        )\n    }\n\n    const setDir = () => {\n        if (branch.lang === 'ar') return 'rtl'\n        else return 'ltr'\n    }\n    const setTextAlign = () => {\n        if (branch.lang === 'ar') return 'right'\n        else return 'left'\n    }\n\n    const handleNameChange = (e) => {\n        setNBranchName(e.target.innerText)\n    }\n\n    const getExMenu = () => {\n        return (\n            <div className={getCls('wrapper1')}>\n                {/* close icon */}\n                <i onClick={branchExMenu} className=\"far fa-times-circle branch-action\"></i>\n                {info && <div className={getCls('info-section')}>\n                    {error && <div className={getCls('error-section')}>\n                        {error}\n                    </div>}\n                    {success && <div className={getCls('success-section')}>\n                        {success}\n                    </div>}\n                </div>}\n                {/* name change */}\n                <div className={getCls('input') + ' exMenuItem newNameEdit'}>\n\n                    {/* <Input1 p={p} placeholder={branch.name} value={nBranchName} onChange={(e) => { setNBranchName(e.target.value) }} /> */}\n\n                    <div className={getCls('edit-branch-wrapper')}>\n                        <div className={getCls('edit-container')}>\n                            <div contentEditable=\"true\" id=\"branchName\" className=\"input-name\" onInput={(e) => handleNameChange(e)} style=\n                                {\n                                    { direction: `${setDir()}`, textAlign: `${setTextAlign()}` }}>\n                                {oldBName}\n                            </div>\n                        </div>\n\n                        <div className={getCls('submit-edit')}>\n                            <span className={getCls('submitBranchName')} onClick={() => { saveNewName() }}>Save</span>\n                        </div>\n                    </div>\n\n\n                </div>\n                {/* pinned change */}\n                <div className={getCls('pinned') + ' exMenuItem'}>\n                    {getPinned()}\n                </div>\n                {/* positive change */}\n                <div className={getCls('positive') + ' exMenuItem'}>\n                    {getPositive()}\n                </div>\n                {/* groups change */}\n                <div className={getCls('groups')}>\n                    <span><b>Groups</b></span>\n                    {getGroupsSection()}\n                </div>\n                <div className={getCls('people')}>\n                    <span><b>People</b></span>\n                    {getPeopleSection()}\n                </div>\n                <div className={getCls('tags')}>\n                    <span><b>Tags</b></span>\n                    {getTagsSection()}\n                </div>\n                {/* TODO Groups Tags and People */}\n            </div>\n        )\n    }\n\n    const gBranchActions = () => {\n        return (\n            <div className={getCls('actions-container')}>\n                {p.branchesListIsBranchMenu &&\n                    <div className={getCls('wrapper0')}>\n                        {!isExMenu && getRootActions()}\n                        {isExMenu && getExMenu()}\n                    </div>\n                }\n            </div>\n        )\n    }\n\n    return (\n        <div className={getCls('branch-container')} style={{ marginBottom: p.branchMargin, backgroundColor: p.branchBKColor }}>\n            {getBranch()}\n            {gBranchActions()}\n        </div>\n    )\n}\n\n\nasync function deleteFunc(url = '') {\n    // Default options are marked with *\n    const response = await fetch(url, {\n        method: 'DELETE', // *GET, POST, PUT, DELETE, etc.\n        mode: 'cors', // no-cors, *cors, same-origin\n        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n        credentials: 'same-origin', // include, *same-origin, omit\n        redirect: 'follow', // manual, *follow, error\n        referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n    });\n    return response.json(); // parses JSON response into native JavaScript objects\n}\n\n\nexport default Single\n"]},"metadata":{},"sourceType":"module"}