{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\React\\\\tree-mysql\\\\src\\\\pages\\\\tags\\\\TagsManager.js\",\n    _s = $RefreshSig$();\n\n/* \npage \nlist\nitem\ninput\nremove \nsave \n\n\n*/\nimport React, { useEffect, useState } from 'react';\nimport { getSpinner, tokenGet } from '../../utils/functions';\nimport GroupItem from './GroupItem';\nimport './tags.css';\nimport Form from './Form';\n\nfunction TagManager(props) {\n  _s();\n\n  const {\n    p\n  } = props;\n\n  const getCls = base => {\n    return p.getCls('uRM-' + base);\n  }; // cerate page state > \n\n\n  const [rGroups, setRGroups] = useState([]);\n  const [filter, SetFilter] = useState(null);\n  const [filtered, setFiltered] = useState([]);\n  const [isPending, setIsPending] = useState(true);\n  useEffect(() => {\n    tokenGet(p.apiBase2 + '/tags', {\n      Authorization: p.token\n    }).then(d => {\n      setRGroups(d);\n      setFiltered(d);\n      setIsPending(false);\n      console.log(d);\n    });\n  }, []);\n  let ex = {\n    rGroups,\n    setRGroups,\n    filter,\n    SetFilter,\n    filtered,\n    setFiltered\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: getCls('wrapper0'),\n    children: [!isPending && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: getCls('wrapper'),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: getCls('title'),\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Tags\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: getCls('form'),\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          p: p,\n          ex: ex\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: getCls('CJ'),\n        children: filtered.map(group => /*#__PURE__*/_jsxDEV(GroupItem, {\n          p: p,\n          group: group\n        }, group.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this), isPending && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: getCls('xcKrrXdi'),\n      children: getSpinner()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TagManager, \"CbD+rWXrcqWue7BDGOGdencWKak=\");\n\n_c = TagManager;\nexport default TagManager;\n\nvar _c;\n\n$RefreshReg$(_c, \"TagManager\");","map":{"version":3,"sources":["F:/React/tree-mysql/src/pages/tags/TagsManager.js"],"names":["React","useEffect","useState","getSpinner","tokenGet","GroupItem","Form","TagManager","props","p","getCls","base","rGroups","setRGroups","filter","SetFilter","filtered","setFiltered","isPending","setIsPending","apiBase2","Authorization","token","then","d","console","log","ex","map","group","name"],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,uBAArC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAO,YAAP;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAIA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACvB,QAAM;AAAEC,IAAAA;AAAF,MAAQD,KAAd;;AACA,QAAME,MAAM,GAAIC,IAAD,IAAU;AAAE,WAAOF,CAAC,CAACC,MAAF,CAAS,SAASC,IAAlB,CAAP;AAAgC,GAA3D,CAFuB,CAIvB;;;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACY,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACc,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACgB,SAAD,EAAYC,YAAZ,IAA4BjB,QAAQ,CAAC,IAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,QAAQ,CAACK,CAAC,CAACW,QAAF,GAAa,OAAd,EAAuB;AAAEC,MAAAA,aAAa,EAAEZ,CAAC,CAACa;AAAnB,KAAvB,CAAR,CAA2DC,IAA3D,CAAiEC,CAAD,IAAO;AACnEX,MAAAA,UAAU,CAACW,CAAD,CAAV;AACAP,MAAAA,WAAW,CAACO,CAAD,CAAX;AACAL,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACH,KALD;AAMH,GAPQ,EAON,EAPM,CAAT;AASA,MAAIG,EAAE,GAAG;AACLf,IAAAA,OADK;AACIC,IAAAA,UADJ;AAELC,IAAAA,MAFK;AAEGC,IAAAA,SAFH;AAGLC,IAAAA,QAHK;AAGKC,IAAAA;AAHL,GAAT;AAMA,sBACI;AAAK,IAAA,SAAS,EAAEP,MAAM,CAAC,UAAD,CAAtB;AAAA,eACK,CAACQ,SAAD,iBACG;AAAK,MAAA,SAAS,EAAER,MAAM,CAAC,SAAD,CAAtB;AAAA,8BAEI;AAAK,QAAA,SAAS,EAAEA,MAAM,CAAC,OAAD,CAAtB;AAAA,+BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ,eAMI;AAAK,QAAA,SAAS,EAAEA,MAAM,CAAC,MAAD,CAAtB;AAAA,+BACI,QAAC,IAAD;AAAM,UAAA,CAAC,EAAED,CAAT;AAAY,UAAA,EAAE,EAAEkB;AAAhB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cANJ,eAUI;AAAK,QAAA,SAAS,EAAEjB,MAAM,CAAC,IAAD,CAAtB;AAAA,kBACKM,QAAQ,CAACY,GAAT,CAAaC,KAAK,iBACf,QAAC,SAAD;AAA4B,UAAA,CAAC,EAAEpB,CAA/B;AAAkC,UAAA,KAAK,EAAEoB;AAAzC,WAAgBA,KAAK,CAACC,IAAtB;AAAA;AAAA;AAAA;AAAA,gBADH;AADL;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFR,EAmBKZ,SAAS,iBACN;AAAK,MAAA,SAAS,EAAER,MAAM,CAAC,UAAD,CAAtB;AAAA,gBACKP,UAAU;AADf;AAAA;AAAA;AAAA;AAAA,YApBR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA4BH;;GArDQI,U;;KAAAA,U;AAuDT,eAAeA,UAAf","sourcesContent":["/* \npage \nlist\nitem\ninput\nremove \nsave \n\n\n*/\n\n\nimport React, { useEffect, useState } from 'react'\nimport { getSpinner, tokenGet } from '../../utils/functions'\nimport GroupItem from './GroupItem'\nimport './tags.css'\nimport Form from './Form'\n\n\n\nfunction TagManager(props) {\n    const { p } = props\n    const getCls = (base) => { return p.getCls('uRM-' + base) }\n\n    // cerate page state > \n    const [rGroups, setRGroups] = useState([])\n    const [filter, SetFilter] = useState(null)\n    const [filtered, setFiltered] = useState([])\n    const [isPending, setIsPending] = useState(true)\n\n    useEffect(() => {\n        tokenGet(p.apiBase2 + '/tags', { Authorization: p.token }).then((d) => {\n            setRGroups(d)\n            setFiltered(d)\n            setIsPending(false)\n            console.log(d)\n        })\n    }, [])\n\n    let ex = {\n        rGroups, setRGroups,\n        filter, SetFilter,\n        filtered, setFiltered\n    }\n\n    return (\n        <div className={getCls('wrapper0')}>\n            {!isPending &&\n                <div className={getCls('wrapper')}>\n                    {/* Title Section  */}\n                    <div className={getCls('title')}>\n                        <h2>Tags</h2>\n                    </div>\n                    {/* input form */}\n                    <div className={getCls('form')}>\n                        <Form p={p} ex={ex} />\n                    </div>\n                    {/* list */}\n                    <div className={getCls('CJ')}>\n                        {filtered.map(group => (\n                            <GroupItem key={group.name} p={p} group={group} />\n                        ))}\n                    </div>\n                </div>\n            }\n            {isPending && \n                <div className={getCls('xcKrrXdi')}>\n                    {getSpinner()}\n                </div>\n            }\n        </div>\n\n    )\n}\n\nexport default TagManager\n"]},"metadata":{},"sourceType":"module"}